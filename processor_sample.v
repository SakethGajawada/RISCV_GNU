/* Generated by Yosys 0.15+57 (git sha1 UNKNOWN, clang 10.0.0-4ubuntu1 -fPIC -Os) */

(* \amaranth.hierarchy  = "top.ALU" *)
(* generator = "Amaranth" *)
module ALU(load_wb, branching, jump, Ra, immediate, pc, Rb, reg_addr_in, inst_type, inst_type0, inst_type1, inst_type2, inst_type3, shamt, web, result, wmask, reg_addr_out, csb);
  reg \$auto$verilog_backend.cc:2083:dump_module$1  = 0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$101 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$103 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$105 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$107 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:336" *)
  wire \$109 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" *)
  wire \$11 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
  wire \$111 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" *)
  wire \$113 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" *)
  wire \$115 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" *)
  wire \$117 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" *)
  wire \$119 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" *)
  wire \$121 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" *)
  wire \$123 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:206" *)
  wire \$125 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:211" *)
  wire \$127 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:215" *)
  wire \$129 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" *)
  wire \$13 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" *)
  wire \$131 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:263" *)
  wire \$133 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:272" *)
  wire \$135 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:281" *)
  wire \$137 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:287" *)
  wire \$139 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:293" *)
  wire \$141 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:299" *)
  wire \$143 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:305" *)
  wire \$145 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:311" *)
  wire \$147 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:318" *)
  wire \$149 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
  wire \$15 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$151 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$153 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$155 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$157 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$159 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$161 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:336" *)
  wire \$163 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
  wire \$165 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" *)
  wire \$167 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" *)
  wire \$169 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" *)
  wire \$17 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" *)
  wire \$171 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" *)
  wire \$173 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" *)
  wire \$175 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" *)
  wire \$177 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:183" *)
  wire \$179 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:226" *)
  wire \$181 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:230" *)
  wire \$183 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:234" *)
  wire \$185 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:238" *)
  wire \$187 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:242" *)
  wire \$189 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" *)
  wire \$19 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:246" *)
  wire \$191 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:227" *)
  wire \$193 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:231" *)
  wire \$195 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:235" *)
  wire \$197 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:239" *)
  wire \$199 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:243" *)
  wire \$201 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:247" *)
  wire \$203 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
  wire \$205 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" *)
  wire \$207 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" *)
  wire \$209 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" *)
  wire \$21 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" *)
  wire \$211 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" *)
  wire \$213 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" *)
  wire \$215 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" *)
  wire \$217 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" *)
  wire \$219 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:263" *)
  wire \$221 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:272" *)
  wire \$223 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:281" *)
  wire \$225 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:287" *)
  wire \$227 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:293" *)
  wire \$229 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" *)
  wire \$23 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:299" *)
  wire \$231 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:305" *)
  wire \$233 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:311" *)
  wire \$235 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:318" *)
  wire \$237 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$239 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$241 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$243 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$245 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$247 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$249 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" *)
  wire \$25 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:336" *)
  wire \$251 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
  wire \$253 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" *)
  wire \$255 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" *)
  wire \$257 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" *)
  wire \$259 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" *)
  wire \$261 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" *)
  wire \$263 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" *)
  wire \$265 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:111" *)
  wire \$267 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:113" *)
  wire \$269 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" *)
  wire \$27 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:115" *)
  wire \$271 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:119" *)
  wire \$273 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:121" *)
  wire \$275 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:125" *)
  wire \$277 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:127" *)
  wire \$279 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:130" *)
  wire \$281 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:132" *)
  wire \$283 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:134" *)
  wire \$285 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:112" *)
  wire [32:0] \$287 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:112" *)
  wire [32:0] \$288 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" *)
  wire \$29 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:114" *)
  wire [32:0] \$290 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:114" *)
  wire [32:0] \$291 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:116" *)
  wire \$293 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:120" *)
  wire [62:0] \$295 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:120" *)
  wire [62:0] \$296 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:122" *)
  wire \$298 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" *)
  wire \$3 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:126" *)
  wire [31:0] \$300 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:126" *)
  wire [31:0] \$302 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:126" *)
  wire [31:0] \$304 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:126" *)
  wire [31:0] \$306 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:126" *)
  wire [31:0] \$308 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:263" *)
  wire \$31 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:129" *)
  wire [31:0] \$310 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:131" *)
  wire [31:0] \$312 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:133" *)
  wire [31:0] \$314 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:135" *)
  wire [31:0] \$316 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:143" *)
  wire \$318 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:148" *)
  wire \$320 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:151" *)
  wire \$322 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:155" *)
  wire \$324 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:160" *)
  wire \$326 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:164" *)
  wire \$328 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:272" *)
  wire \$33 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:168" *)
  wire \$330 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:172" *)
  wire \$332 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:163" *)
  wire [31:0] \$334 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:163" *)
  wire [31:0] \$336 ;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/back/rtlil.py:569" *)
  wire \$337 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:167" *)
  wire [31:0] \$340 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:167" *)
  wire [31:0] \$342 ;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/back/rtlil.py:569" *)
  wire \$343 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:171" *)
  wire [31:0] \$346 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:171" *)
  wire [31:0] \$348 ;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/back/rtlil.py:569" *)
  wire \$349 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:281" *)
  wire \$35 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:175" *)
  wire [31:0] \$352 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:175" *)
  wire [31:0] \$354 ;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/back/rtlil.py:569" *)
  wire \$355 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:183" *)
  wire \$358 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:186" *)
  wire [31:0] \$360 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:33" *)
  wire [6:0] \$361 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:186" *)
  wire [7:0] \$363 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:195" *)
  wire \$366 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:197" *)
  wire \$368 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:287" *)
  wire \$37 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:198" *)
  wire [33:0] \$370 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:33" *)
  wire [31:0] \$371 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:198" *)
  wire [32:0] \$373 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:198" *)
  wire [33:0] \$375 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:206" *)
  wire \$377 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:211" *)
  wire \$379 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:215" *)
  wire \$381 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:209" *)
  wire [32:0] \$383 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:209" *)
  wire [32:0] \$384 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:213" *)
  wire [32:0] \$386 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:213" *)
  wire [32:0] \$387 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:217" *)
  wire [32:0] \$389 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:293" *)
  wire \$39 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:217" *)
  wire [32:0] \$390 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:226" *)
  wire \$392 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:230" *)
  wire \$394 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:234" *)
  wire \$396 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:238" *)
  wire \$398 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:242" *)
  wire \$400 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:246" *)
  wire \$402 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:227" *)
  wire \$404 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:231" *)
  wire \$406 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:233" *)
  wire [32:0] \$408 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:233" *)
  wire [32:0] \$409 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:299" *)
  wire \$41 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:235" *)
  wire \$411 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:239" *)
  wire \$413 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:243" *)
  wire \$415 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:247" *)
  wire \$417 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" *)
  wire \$419 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:263" *)
  wire \$421 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:272" *)
  wire \$423 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:281" *)
  wire \$425 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:287" *)
  wire \$427 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:293" *)
  wire \$429 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:305" *)
  wire \$43 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:299" *)
  wire \$431 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:305" *)
  wire \$433 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:311" *)
  wire \$435 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:318" *)
  wire \$437 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$439 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$441 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$443 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$445 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$447 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$449 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:311" *)
  wire \$45 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:336" *)
  wire \$451 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:262" *)
  wire [32:0] \$453 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:262" *)
  wire [32:0] \$454 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:268" *)
  wire \$456 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:277" *)
  wire \$458 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:286" *)
  wire [31:0] \$460 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:286" *)
  wire [31:0] \$462 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:286" *)
  wire [31:0] \$464 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:286" *)
  wire [31:0] \$466 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:286" *)
  wire [31:0] \$468 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:318" *)
  wire \$47 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:292" *)
  wire [31:0] \$470 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:298" *)
  wire [31:0] \$472 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:303" *)
  wire [31:0] \$474 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:33" *)
  wire [6:0] \$475 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:303" *)
  wire [7:0] \$477 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:310" *)
  wire [62:0] \$480 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:310" *)
  wire [62:0] \$481 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:317" *)
  wire [31:0] \$483 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:323" *)
  wire [31:0] \$485 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:325" *)
  wire [32:0] \$487 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:325" *)
  wire [32:0] \$488 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$49 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:331" *)
  wire [32:0] \$490 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:331" *)
  wire [32:0] \$491 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:337" *)
  wire [32:0] \$493 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:337" *)
  wire [32:0] \$494 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
  wire \$496 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" *)
  wire \$498 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" *)
  wire \$5 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" *)
  wire \$500 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" *)
  wire \$502 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" *)
  wire \$504 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" *)
  wire \$506 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" *)
  wire \$508 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$51 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:111" *)
  wire \$510 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:113" *)
  wire \$512 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:115" *)
  wire \$514 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:119" *)
  wire \$516 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:121" *)
  wire \$518 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:125" *)
  wire \$520 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:127" *)
  wire \$522 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:130" *)
  wire \$524 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:132" *)
  wire \$526 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:134" *)
  wire \$528 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$53 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:143" *)
  wire \$530 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:148" *)
  wire \$532 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:151" *)
  wire \$534 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:155" *)
  wire \$536 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:160" *)
  wire \$538 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:164" *)
  wire \$540 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:168" *)
  wire \$542 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:172" *)
  wire \$544 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" *)
  wire \$546 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:263" *)
  wire \$548 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$55 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:272" *)
  wire \$550 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:281" *)
  wire \$552 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:287" *)
  wire \$554 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:293" *)
  wire \$556 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:299" *)
  wire \$558 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:305" *)
  wire \$560 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:311" *)
  wire \$562 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:318" *)
  wire \$564 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$566 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$568 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$57 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$570 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$572 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$574 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$576 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:336" *)
  wire \$578 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
  wire \$580 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" *)
  wire \$582 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" *)
  wire \$584 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" *)
  wire \$586 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" *)
  wire \$588 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *)
  wire \$59 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" *)
  wire \$590 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" *)
  wire \$592 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:143" *)
  wire \$594 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:148" *)
  wire \$596 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:151" *)
  wire \$598 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:155" *)
  wire \$600 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:160" *)
  wire \$602 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:164" *)
  wire \$604 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:168" *)
  wire \$606 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:172" *)
  wire \$608 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:336" *)
  wire \$61 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
  wire \$610 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" *)
  wire \$612 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" *)
  wire \$614 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" *)
  wire \$616 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" *)
  wire \$618 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" *)
  wire \$620 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" *)
  wire \$622 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:143" *)
  wire \$624 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:148" *)
  wire \$626 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:151" *)
  wire \$628 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
  wire \$63 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:155" *)
  wire \$630 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:160" *)
  wire \$632 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:164" *)
  wire \$634 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:168" *)
  wire \$636 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:172" *)
  wire \$638 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:146" *)
  wire [63:0] \$640 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:149" *)
  wire [63:0] \$642 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:14" *)
  wire [32:0] \$644 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:13" *)
  wire [32:0] \$646 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:153" *)
  wire [63:0] \$648 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" *)
  wire \$65 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:158" *)
  wire [63:0] \$650 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
  wire \$652 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" *)
  wire \$654 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" *)
  wire \$656 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" *)
  wire \$658 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" *)
  wire \$660 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" *)
  wire \$662 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" *)
  wire \$664 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:206" *)
  wire \$666 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:211" *)
  wire \$668 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" *)
  wire \$67 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:215" *)
  wire \$670 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" *)
  wire \$69 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" *)
  wire \$7 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" *)
  wire \$71 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" *)
  wire \$73 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" *)
  wire \$75 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" *)
  wire \$77 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:263" *)
  wire \$79 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:272" *)
  wire \$81 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:281" *)
  wire \$83 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:287" *)
  wire \$85 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:293" *)
  wire \$87 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:299" *)
  wire \$89 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" *)
  wire \$9 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:305" *)
  wire \$91 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:311" *)
  wire \$93 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:318" *)
  wire \$95 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$97 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *)
  wire \$99 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:14" *)
  input [31:0] Ra;
  wire [31:0] Ra;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:12" *)
  reg [31:0] Ra_unsigned;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:15" *)
  input [31:0] Rb;
  wire [31:0] Rb;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:13" *)
  reg [31:0] Rb_unsigned;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:25" *)
  output branching;
  reg branching;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:36" *)
  output csb;
  reg csb;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:26" *)
  reg [31:0] data_to_mem;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:24" *)
  input [31:0] immediate;
  wire [31:0] immediate;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:18" *)
  input [2:0] inst_type;
  wire [2:0] inst_type;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:19" *)
  input [16:0] inst_type0;
  wire [16:0] inst_type0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:20" *)
  input [10:0] inst_type1;
  wire [10:0] inst_type1;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:28" *)
  wire [10:0] inst_type1_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:21" *)
  input [10:0] inst_type2;
  wire [10:0] inst_type2;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:29" *)
  wire [10:0] inst_type2_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:22" *)
  input [6:0] inst_type3;
  wire [6:0] inst_type3;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:30" *)
  wire [6:0] inst_type3_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:27" *)
  wire [2:0] inst_type_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:32" *)
  output jump;
  reg jump;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:38" *)
  output load_wb;
  reg load_wb;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:33" *)
  input [5:0] pc;
  wire [5:0] pc;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:23" *)
  input [4:0] reg_addr_in;
  wire [4:0] reg_addr_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:31" *)
  output [4:0] reg_addr_out;
  wire [4:0] reg_addr_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:16" *)
  output [31:0] result;
  reg [31:0] result;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:17" *)
  reg [63:0] result64;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:34" *)
  input [4:0] shamt;
  wire [4:0] shamt;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:35" *)
  wire [4:0] shamt1;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:37" *)
  output web;
  reg web;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:39" *)
  output [3:0] wmask;
  reg [3:0] wmask;
  assign \$288  = $signed(Ra) + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:112" *) $signed(Rb);
  assign \$291  = $signed(Ra) - (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:114" *) $signed(Rb);
  assign \$296  = $signed(Ra) <<< (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:120" *) shamt1;
  assign \$300  = ~ (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:126" *) $signed(Rb);
  assign \$302  = $signed(Ra) & (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:126" *) $signed(\$300 );
  assign \$306  = $signed(\$304 ) & (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:126" *) $signed(Rb);
  assign \$308  = $signed(\$302 ) | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:126" *) $signed(\$306 );
  assign \$310  = Ra_unsigned >>> (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:129" *) shamt1;
  assign \$312  = $signed(Ra) >>> (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:131" *) shamt1;
  assign \$314  = $signed(Rb) | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:133" *) $signed(Ra);
  assign \$316  = $signed(Rb) & (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:135" *) $signed(Ra);
  assign \$340  = Ra_unsigned / (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:167" *) Rb_unsigned;
  assign \$342  = \$343  ? (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:167" *) 32'd0 : \$340 ;
  assign \$352  = Ra_unsigned % (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:175" *) Rb_unsigned;
  assign \$355  = ! (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/back/rtlil.py:569" *) Rb_unsigned;
  assign \$354  = \$355  ? (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:175" *) 32'd0 : \$352 ;
  assign \$358  = inst_type3 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:183" *) 7'h6f;
  assign \$363  = $signed(\$361 ) + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:186" *) $signed(7'h7e);
  assign \$360  = + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:186" *) $signed(\$363 );
  assign \$366  = inst_type3 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:195" *) 6'h37;
  assign \$368  = inst_type3 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:197" *) 5'h17;
  assign \$371  = + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:33" *) pc;
  assign \$373  = $signed(immediate) + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:198" *) $signed(\$371 );
  assign \$375  = $signed(\$373 ) + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:198" *) $signed(3'h5);
  assign \$392  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:226" *) 7'h63;
  assign \$394  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:230" *) 8'he3;
  assign \$396  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:234" *) 10'h263;
  assign \$398  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:238" *) 10'h2e3;
  assign \$400  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:242" *) 10'h363;
  assign \$402  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:246" *) 10'h3e3;
  assign \$404  = $signed(Ra) == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:227" *) $signed(Rb);
  assign \$406  = $signed(Ra) != (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:231" *) $signed(Rb);
  assign \$415  = $signed(Ra) < (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:243" *) $signed(Rb);
  assign \$417  = $signed(Ra) >= (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:247" *) $signed(Rb);
  assign \$458  = $signed(Ra) < (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:277" *) $signed(immediate);
  assign \$460  = ~ (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:286" *) $signed(immediate);
  assign \$462  = $signed(Ra) & (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:286" *) $signed(\$460 );
  assign \$464  = ~ (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:286" *) $signed(Ra);
  assign \$466  = $signed(\$464 ) & (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:286" *) $signed(immediate);
  assign \$468  = $signed(\$462 ) | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:286" *) $signed(\$466 );
  assign \$470  = $signed(Ra) | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:292" *) $signed(immediate);
  assign \$472  = $signed(Ra) & (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:298" *) $signed(immediate);
  assign \$475  = + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:33" *) pc;
  assign \$481  = $signed(Ra) <<< (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:310" *) shamt;
  assign \$483  = Ra_unsigned >>> (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:317" *) shamt;
  assign \$485  = $signed(Ra) >>> (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:323" *) shamt;
  assign \$494  = $signed(Ra) + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:337" *) $signed(immediate);
  assign \$510  = inst_type1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:111" *) 6'h33;
  assign \$512  = inst_type1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:113" *) 11'h433;
  assign \$514  = inst_type1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:115" *) 9'h1b3;
  assign \$516  = inst_type1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:119" *) 8'hb3;
  assign \$518  = inst_type1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:121" *) 9'h133;
  assign \$520  = inst_type1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:125" *) 10'h233;
  assign \$522  = inst_type1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:127" *) 10'h2b3;
  assign \$524  = inst_type1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:130" *) 11'h6b3;
  assign \$526  = inst_type1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:132" *) 10'h333;
  assign \$528  = inst_type1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:134" *) 10'h3b3;
  assign \$546  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" *) 5'h13;
  assign \$548  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:263" *) 9'h113;
  assign \$550  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:272" *) 9'h193;
  assign \$552  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:281" *) 10'h213;
  assign \$554  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:287" *) 10'h313;
  assign \$556  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:293" *) 10'h393;
  assign \$558  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:299" *) 7'h67;
  assign \$560  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:305" *) 8'h93;
  assign \$562  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:311" *) 10'h293;
  assign \$564  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:318" *) 11'h693;
  assign \$566  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *) 10'h203;
  assign \$568  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *) 2'h3;
  assign \$570  = \$566  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" *) \$568 ;
  assign \$572  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *) 10'h283;
  assign \$574  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *) 8'h83;
  assign \$576  = \$572  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" *) \$574 ;
  assign \$578  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:336" *) 9'h103;
  assign \$624  = inst_type0 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:143" *) 11'h433;
  assign \$626  = inst_type0 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:148" *) 11'h4b3;
  assign \$628  = inst_type0 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:151" *) 11'h533;
  assign \$630  = inst_type0 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:155" *) 11'h5b3;
  assign \$632  = inst_type0 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:160" *) 11'h633;
  assign \$634  = inst_type0 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:164" *) 11'h6b3;
  assign \$636  = inst_type0 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:168" *) 11'h733;
  assign \$638  = inst_type0 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:172" *) 11'h7b3;
  assign \$642  = $signed(Ra) * (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:149" *) $signed(Rb);
  assign \$644  = + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:14" *) $signed(Ra);
  assign \$646  = + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:13" *) Rb_unsigned;
  assign \$648  = $signed(\$644 ) * (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:153" *) $signed(\$646 );
  assign \$650  = Ra_unsigned * (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:158" *) Rb_unsigned;
  assign \$652  = inst_type == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *) 3'h7;
  assign \$654  = inst_type == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" *) 2'h2;
  assign \$656  = inst_type == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" *) 3'h6;
  assign \$658  = inst_type == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" *) 3'h5;
  assign \$660  = inst_type == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" *) 2'h3;
  assign \$662  = inst_type == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" *) 3'h4;
  assign \$664  = inst_type == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" *) 1'h1;
  assign \$666  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:206" *) 6'h23;
  assign \$668  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:211" *) 8'ha3;
  assign \$670  = inst_type2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:215" *) 9'h123;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    branching = 1'h0;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
    casez ({ \$177 , \$175 , \$173 , \$171 , \$169 , \$167 , \$165  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" */
      7'b??????1:
          branching = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" */
      7'b?????1?:
          branching = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" */
      7'b????1??:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:183" *)
          casez (\$179 )
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:183" */
            1'h1:
                branching = 1'h1;
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" */
      7'b???1???:
          branching = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" */
      7'b??1????:
          branching = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" */
      7'b?1?????:
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:226" *)
          casez ({ \$191 , \$189 , \$187 , \$185 , \$183 , \$181  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:226" */
            6'b?????1:
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:227" *)
                casez (\$193 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:227" */
                  1'h1:
                      branching = 1'h1;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:230" */
            6'b????1?:
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:231" *)
                casez (\$195 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:231" */
                  1'h1:
                      branching = 1'h1;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:234" */
            6'b???1??:
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:235" *)
                casez (\$197 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:235" */
                  1'h1:
                      branching = 1'h1;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:238" */
            6'b??1???:
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:239" *)
                casez (\$199 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:239" */
                  1'h1:
                      branching = 1'h1;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:242" */
            6'b?1????:
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:243" *)
                casez (\$201 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:243" */
                  1'h1:
                      branching = 1'h1;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:246" */
            6'b1?????:
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:247" *)
                casez (\$203 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:247" */
                  1'h1:
                      branching = 1'h1;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:250" */
            default:
                branching = 1'h0;
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" */
      7'b1??????:
          branching = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    jump = 1'h0;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
    casez ({ \$217 , \$215 , \$213 , \$211 , \$209 , \$207 , \$205  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" */
      7'b??????1:
          jump = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" */
      7'b?????1?:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" */
      7'b????1??:
          jump = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" */
      7'b???1???:
          jump = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" */
      7'b??1????:
          jump = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" */
      7'b?1?????:
          jump = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" */
      7'b1??????:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" *)
          casez ({ \$251 , \$249 , \$243 , \$237 , \$235 , \$233 , \$231 , \$229 , \$227 , \$225 , \$223 , \$221 , \$219  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" */
            13'b????????????1:
                jump = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:263" */
            13'b???????????1?:
                jump = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:272" */
            13'b??????????1??:
                jump = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:281" */
            13'b?????????1???:
                jump = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:287" */
            13'b????????1????:
                jump = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:293" */
            13'b???????1?????:
                jump = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:299" */
            13'b??????1??????:
                jump = 1'h1;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:305" */
            13'b?????1???????:
                jump = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:311" */
            13'b????1????????:
                jump = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:318" */
            13'b???1?????????:
                jump = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" */
            13'b??1??????????:
                jump = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" */
            13'b?1???????????:
                jump = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:336" */
            13'h1???:
                jump = 1'h0;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    result = 32'd0;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
    casez ({ \$265 , \$263 , \$261 , \$259 , \$257 , \$255 , \$253  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" */
      7'b??????1:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:111" *)
          casez ({ \$285 , \$283 , \$281 , \$279 , \$277 , \$275 , \$273 , \$271 , \$269 , \$267  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:111" */
            10'b?????????1:
                result = \$288 [31:0];
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:113" */
            10'b????????1?:
                result = \$291 [31:0];
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:115" */
            10'b???????1??:
                (* full_case = 32'd1 *)
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:116" *)
                casez (\$293 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:116" */
                  1'h1:
                      result = 32'd1;
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:118" */
                  default:
                      result = 32'd0;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:119" */
            10'b??????1???:
                result = \$296 [31:0];
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:121" */
            10'b?????1????:
                (* full_case = 32'd1 *)
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:122" *)
                casez (\$298 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:122" */
                  1'h1:
                      result = 32'd1;
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:124" */
                  default:
                      result = 32'd0;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:125" */
            10'b????1?????:
                result = \$308 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:127" */
            10'b???1??????:
                result = \$310 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:130" */
            10'b??1???????:
                result = \$312 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:132" */
            10'b?1????????:
                result = \$314 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:134" */
            10'b1?????????:
                result = \$316 ;
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" */
      7'b?????1?:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:143" *)
          casez ({ \$332 , \$330 , \$328 , \$326 , \$324 , \$322 , \$320 , \$318  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:143" */
            8'b???????1:
                result = result64[31:0];
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:148" */
            8'b??????1?:
                result = result64[63:32];
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:151" */
            8'b?????1??:
                result = result64[63:32];
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:155" */
            8'b????1???:
                result = result64[63:32];
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:160" */
            8'b???1????:
                result = \$336 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:164" */
            8'b??1?????:
                result = \$342 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:168" */
            8'b?1??????:
                result = \$348 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:172" */
            8'b1???????:
                result = \$354 ;
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" */
      7'b????1??:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:183" *)
          casez (\$358 )
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:183" */
            1'h1:
                result = \$360 ;
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" */
      7'b???1???:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:195" *)
          casez ({ \$368 , \$366  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:195" */
            2'b?1:
                result = immediate;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:197" */
            2'b1?:
                result = \$375 [31:0];
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" */
      7'b??1????:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:206" *)
          casez ({ \$381 , \$379 , \$377  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:206" */
            3'b??1:
                result = \$384 [31:0];
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:211" */
            3'b?1?:
                result = \$387 [31:0];
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:215" */
            3'b1??:
                result = \$390 [31:0];
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" */
      7'b?1?????:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:226" *)
          casez ({ \$402 , \$400 , \$398 , \$396 , \$394 , \$392  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:226" */
            6'b?????1:
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:227" *)
                casez (\$404 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:227" */
                  1'h1:
                      result = immediate;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:230" */
            6'b????1?:
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:231" *)
                casez (\$406 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:231" */
                  1'h1:
                      result = \$409 [31:0];
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:234" */
            6'b???1??:
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:235" *)
                casez (\$411 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:235" */
                  1'h1:
                      result = immediate;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:238" */
            6'b??1???:
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:239" *)
                casez (\$413 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:239" */
                  1'h1:
                      result = immediate;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:242" */
            6'b?1????:
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:243" *)
                casez (\$415 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:243" */
                  1'h1:
                      result = immediate;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:246" */
            6'b1?????:
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:247" *)
                casez (\$417 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:247" */
                  1'h1:
                      result = immediate;
                endcase
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" */
      7'b1??????:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" *)
          casez ({ \$451 , \$449 , \$443 , \$437 , \$435 , \$433 , \$431 , \$429 , \$427 , \$425 , \$423 , \$421 , \$419  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" */
            13'b????????????1:
                result = \$454 [31:0];
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:263" */
            13'b???????????1?:
                (* full_case = 32'd1 *)
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:268" *)
                casez (\$456 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:268" */
                  1'h1:
                      result = 32'd1;
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:270" */
                  default:
                      result = 32'd0;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:272" */
            13'b??????????1??:
                (* full_case = 32'd1 *)
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:277" *)
                casez (\$458 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:277" */
                  1'h1:
                      result = 32'd1;
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:279" */
                  default:
                      result = 32'd0;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:281" */
            13'b?????????1???:
                result = \$468 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:287" */
            13'b????????1????:
                result = \$470 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:293" */
            13'b???????1?????:
                result = \$472 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:299" */
            13'b??????1??????:
                result = \$474 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:305" */
            13'b?????1???????:
                result = \$481 [31:0];
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:311" */
            13'b????1????????:
                result = \$483 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:318" */
            13'b???1?????????:
                result = \$485 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" */
            13'b??1??????????:
                result = \$488 [31:0];
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" */
            13'b?1???????????:
                result = \$491 [31:0];
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:336" */
            13'h1???:
                result = \$494 [31:0];
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    Ra_unsigned = 32'd0;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
    casez ({ \$508 , \$506 , \$504 , \$502 , \$500 , \$498 , \$496  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" */
      7'b??????1:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:111" *)
          casez ({ \$528 , \$526 , \$524 , \$522 , \$520 , \$518 , \$516 , \$514 , \$512 , \$510  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:111" */
            10'b?????????1:
                /* empty */;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:113" */
            10'b????????1?:
                /* empty */;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:115" */
            10'b???????1??:
                /* empty */;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:119" */
            10'b??????1???:
                /* empty */;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:121" */
            10'b?????1????:
                /* empty */;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:125" */
            10'b????1?????:
                /* empty */;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:127" */
            10'b???1??????:
                Ra_unsigned = Ra;
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" */
      7'b?????1?:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:143" *)
          casez ({ \$544 , \$542 , \$540 , \$538 , \$536 , \$534 , \$532 , \$530  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:143" */
            8'b???????1:
                Ra_unsigned = Ra;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:148" */
            8'b??????1?:
                /* empty */;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:151" */
            8'b?????1??:
                /* empty */;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:155" */
            8'b????1???:
                Ra_unsigned = Ra;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:160" */
            8'b???1????:
                Ra_unsigned = Ra;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:164" */
            8'b??1?????:
                Ra_unsigned = Ra;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:168" */
            8'b?1??????:
                Ra_unsigned = Ra;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:172" */
            8'b1???????:
                Ra_unsigned = Ra;
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" */
      7'b????1??:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" */
      7'b???1???:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" */
      7'b??1????:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" */
      7'b?1?????:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" */
      7'b1??????:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" *)
          casez ({ \$578 , \$576 , \$570 , \$564 , \$562 , \$560 , \$558 , \$556 , \$554 , \$552 , \$550 , \$548 , \$546  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" */
            13'b????????????1:
                /* empty */;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:263" */
            13'b???????????1?:
                /* empty */;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:272" */
            13'b??????????1??:
                /* empty */;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:281" */
            13'b?????????1???:
                /* empty */;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:287" */
            13'b????????1????:
                /* empty */;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:293" */
            13'b???????1?????:
                /* empty */;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:299" */
            13'b??????1??????:
                /* empty */;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:305" */
            13'b?????1???????:
                /* empty */;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:311" */
            13'b????1????????:
                Ra_unsigned = Ra;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    Rb_unsigned = 32'd0;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
    casez ({ \$592 , \$590 , \$588 , \$586 , \$584 , \$582 , \$580  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" */
      7'b??????1:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" */
      7'b?????1?:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:143" *)
          casez ({ \$608 , \$606 , \$604 , \$602 , \$600 , \$598 , \$596 , \$594  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:143" */
            8'b???????1:
                Rb_unsigned = Rb;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:148" */
            8'b??????1?:
                /* empty */;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:151" */
            8'b?????1??:
                Rb_unsigned = Rb;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:155" */
            8'b????1???:
                Rb_unsigned = Rb;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:160" */
            8'b???1????:
                Rb_unsigned = Rb;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:164" */
            8'b??1?????:
                Rb_unsigned = Rb;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:168" */
            8'b?1??????:
                Rb_unsigned = Rb;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:172" */
            8'b1???????:
                Rb_unsigned = Rb;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    result64 = 64'h0000000000000000;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
    casez ({ \$622 , \$620 , \$618 , \$616 , \$614 , \$612 , \$610  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" */
      7'b??????1:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" */
      7'b?????1?:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:143" *)
          casez ({ \$638 , \$636 , \$634 , \$632 , \$630 , \$628 , \$626 , \$624  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:143" */
            8'b???????1:
                result64 = \$640 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:148" */
            8'b??????1?:
                result64 = \$642 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:151" */
            8'b?????1??:
                result64 = \$648 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:155" */
            8'b????1???:
                result64 = \$650 ;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    data_to_mem = 32'd0;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
    casez ({ \$664 , \$662 , \$660 , \$658 , \$656 , \$654 , \$652  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" */
      7'b??????1:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" */
      7'b?????1?:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" */
      7'b????1??:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" */
      7'b???1???:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" */
      7'b??1????:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:206" *)
          casez ({ \$670 , \$668 , \$666  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:206" */
            3'b??1:
                data_to_mem = Rb;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:211" */
            3'b?1?:
                data_to_mem = Rb;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:215" */
            3'b1??:
                data_to_mem = Rb;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    load_wb = 1'h0;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
    casez ({ \$13 , \$11 , \$9 , \$7 , \$5 , \$3 , \$1  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" */
      7'b??????1:
          load_wb = 1'h1;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" */
      7'b?????1?:
          load_wb = 1'h1;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" */
      7'b????1??:
          load_wb = 1'h1;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" */
      7'b???1???:
          load_wb = 1'h1;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" */
      7'b??1????:
          load_wb = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" */
      7'b?1?????:
          load_wb = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" */
      7'b1??????:
          load_wb = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    csb = 1'h0;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
    casez ({ \$27 , \$25 , \$23 , \$21 , \$19 , \$17 , \$15  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" */
      7'b??????1:
          csb = 1'h1;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" */
      7'b?????1?:
          csb = 1'h1;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" */
      7'b????1??:
          csb = 1'h1;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" */
      7'b???1???:
          csb = 1'h1;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" */
      7'b??1????:
          csb = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" */
      7'b?1?????:
          csb = 1'h1;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" */
      7'b1??????:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" *)
          casez ({ \$61 , \$59 , \$53 , \$47 , \$45 , \$43 , \$41 , \$39 , \$37 , \$35 , \$33 , \$31 , \$29  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" */
            13'b????????????1:
                csb = 1'h1;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:263" */
            13'b???????????1?:
                csb = 1'h1;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:272" */
            13'b??????????1??:
                csb = 1'h1;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:281" */
            13'b?????????1???:
                csb = 1'h1;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:287" */
            13'b????????1????:
                csb = 1'h1;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:293" */
            13'b???????1?????:
                csb = 1'h1;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:299" */
            13'b??????1??????:
                csb = 1'h1;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:305" */
            13'b?????1???????:
                csb = 1'h1;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:311" */
            13'b????1????????:
                csb = 1'h1;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:318" */
            13'b???1?????????:
                csb = 1'h1;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" */
            13'b??1??????????:
                csb = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" */
            13'b?1???????????:
                csb = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:336" */
            13'h1???:
                csb = 1'h0;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    web = 1'h0;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
    casez ({ \$75 , \$73 , \$71 , \$69 , \$67 , \$65 , \$63  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" */
      7'b??????1:
          web = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" */
      7'b?????1?:
          web = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" */
      7'b????1??:
          web = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" */
      7'b???1???:
          web = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" */
      7'b??1????:
          web = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" */
      7'b?1?????:
          web = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" */
      7'b1??????:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" *)
          casez ({ \$109 , \$107 , \$101 , \$95 , \$93 , \$91 , \$89 , \$87 , \$85 , \$83 , \$81 , \$79 , \$77  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" */
            13'b????????????1:
                web = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:263" */
            13'b???????????1?:
                web = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:272" */
            13'b??????????1??:
                web = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:281" */
            13'b?????????1???:
                web = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:287" */
            13'b????????1????:
                web = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:293" */
            13'b???????1?????:
                web = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:299" */
            13'b??????1??????:
                web = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:305" */
            13'b?????1???????:
                web = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:311" */
            13'b????1????????:
                web = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:318" */
            13'b???1?????????:
                web = 1'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" */
            13'b??1??????????:
                web = 1'h1;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" */
            13'b?1???????????:
                web = 1'h1;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:336" */
            13'h1???:
                web = 1'h1;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    wmask = 4'h0;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" *)
    casez ({ \$123 , \$121 , \$119 , \$117 , \$115 , \$113 , \$111  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:104" */
      7'b??????1:
          wmask = 4'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:137" */
      7'b?????1?:
          wmask = 4'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:177" */
      7'b????1??:
          wmask = 4'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:188" */
      7'b???1???:
          wmask = 4'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:200" */
      7'b??1????:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:206" *)
          casez ({ \$129 , \$127 , \$125  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:206" */
            3'b??1:
                wmask = 4'h1;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:211" */
            3'b?1?:
                wmask = 4'h3;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:215" */
            3'b1??:
                wmask = 4'hf;
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:220" */
      7'b?1?????:
          wmask = 4'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:253" */
      7'b1??????:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" *)
          casez ({ \$163 , \$161 , \$155 , \$149 , \$147 , \$145 , \$143 , \$141 , \$139 , \$137 , \$135 , \$133 , \$131  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:256" */
            13'b????????????1:
                wmask = 4'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:263" */
            13'b???????????1?:
                wmask = 4'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:272" */
            13'b??????????1??:
                wmask = 4'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:281" */
            13'b?????????1???:
                wmask = 4'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:287" */
            13'b????????1????:
                wmask = 4'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:293" */
            13'b???????1?????:
                wmask = 4'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:299" */
            13'b??????1??????:
                wmask = 4'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:305" */
            13'b?????1???????:
                wmask = 4'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:311" */
            13'b????1????????:
                wmask = 4'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:318" */
            13'b???1?????????:
                wmask = 4'h0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:324" */
            13'b??1??????????:
                wmask = 4'h1;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:330" */
            13'b?1???????????:
                wmask = 4'h3;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:336" */
            13'h1???:
                wmask = 4'hf;
          endcase
    endcase
  end
  assign \$287  = \$288 ;
  assign \$290  = \$291 ;
  assign \$295  = \$296 ;
  assign \$370  = \$375 ;
  assign \$383  = \$384 ;
  assign \$386  = \$387 ;
  assign \$389  = \$390 ;
  assign \$408  = \$409 ;
  assign \$453  = \$454 ;
  assign \$480  = \$481 ;
  assign \$487  = \$488 ;
  assign \$490  = \$491 ;
  assign \$493  = \$494 ;
  assign shamt1 = Rb[4:0];
  assign reg_addr_out = reg_addr_in;
  assign inst_type3_out = inst_type3;
  assign inst_type2_out = inst_type2;
  assign inst_type1_out = inst_type1;
  assign inst_type_out = inst_type;
  assign \$640  = \$650 ;
  assign \$622  = \$664 ;
  assign \$620  = \$662 ;
  assign \$618  = \$660 ;
  assign \$616  = \$658 ;
  assign \$614  = \$656 ;
  assign \$612  = \$654 ;
  assign \$610  = \$652 ;
  assign \$608  = \$638 ;
  assign \$606  = \$636 ;
  assign \$604  = \$634 ;
  assign \$602  = \$632 ;
  assign \$600  = \$630 ;
  assign \$598  = \$628 ;
  assign \$596  = \$626 ;
  assign \$594  = \$624 ;
  assign \$592  = \$664 ;
  assign \$590  = \$662 ;
  assign \$588  = \$660 ;
  assign \$586  = \$658 ;
  assign \$584  = \$656 ;
  assign \$582  = \$654 ;
  assign \$580  = \$652 ;
  assign \$544  = \$638 ;
  assign \$542  = \$636 ;
  assign \$540  = \$634 ;
  assign \$538  = \$632 ;
  assign \$536  = \$630 ;
  assign \$534  = \$628 ;
  assign \$532  = \$626 ;
  assign \$530  = \$624 ;
  assign \$508  = \$664 ;
  assign \$506  = \$662 ;
  assign \$504  = \$660 ;
  assign \$502  = \$658 ;
  assign \$500  = \$656 ;
  assign \$498  = \$654 ;
  assign \$496  = \$652 ;
  assign \$491  = \$494 ;
  assign \$488  = \$494 ;
  assign \$456  = \$458 ;
  assign \$454  = \$494 ;
  assign \$451  = \$578 ;
  assign \$447  = \$574 ;
  assign \$445  = \$572 ;
  assign \$441  = \$568 ;
  assign \$439  = \$566 ;
  assign \$437  = \$564 ;
  assign \$435  = \$562 ;
  assign \$433  = \$560 ;
  assign \$431  = \$558 ;
  assign \$429  = \$556 ;
  assign \$427  = \$554 ;
  assign \$425  = \$552 ;
  assign \$423  = \$550 ;
  assign \$421  = \$548 ;
  assign \$419  = \$546 ;
  assign \$413  = \$417 ;
  assign \$411  = \$415 ;
  assign \$409  = \$494 ;
  assign \$390  = \$494 ;
  assign \$387  = \$494 ;
  assign \$384  = \$494 ;
  assign \$381  = \$670 ;
  assign \$379  = \$668 ;
  assign \$377  = \$666 ;
  assign \$361  = \$475 ;
  assign \$349  = \$355 ;
  assign \$346  = \$352 ;
  assign \$343  = \$355 ;
  assign \$337  = \$355 ;
  assign \$334  = \$340 ;
  assign \$332  = \$638 ;
  assign \$330  = \$636 ;
  assign \$328  = \$634 ;
  assign \$326  = \$632 ;
  assign \$324  = \$630 ;
  assign \$322  = \$628 ;
  assign \$320  = \$626 ;
  assign \$318  = \$624 ;
  assign \$304  = \$464 ;
  assign \$298  = \$415 ;
  assign \$293  = \$415 ;
  assign \$285  = \$528 ;
  assign \$283  = \$526 ;
  assign \$281  = \$524 ;
  assign \$279  = \$522 ;
  assign \$277  = \$520 ;
  assign \$275  = \$518 ;
  assign \$273  = \$516 ;
  assign \$271  = \$514 ;
  assign \$269  = \$512 ;
  assign \$267  = \$510 ;
  assign \$265  = \$664 ;
  assign \$263  = \$662 ;
  assign \$261  = \$660 ;
  assign \$259  = \$658 ;
  assign \$257  = \$656 ;
  assign \$255  = \$654 ;
  assign \$253  = \$652 ;
  assign \$251  = \$578 ;
  assign \$247  = \$574 ;
  assign \$245  = \$572 ;
  assign \$241  = \$568 ;
  assign \$239  = \$566 ;
  assign \$237  = \$564 ;
  assign \$235  = \$562 ;
  assign \$233  = \$560 ;
  assign \$231  = \$558 ;
  assign \$229  = \$556 ;
  assign \$227  = \$554 ;
  assign \$225  = \$552 ;
  assign \$223  = \$550 ;
  assign \$221  = \$548 ;
  assign \$219  = \$546 ;
  assign \$217  = \$664 ;
  assign \$215  = \$662 ;
  assign \$213  = \$660 ;
  assign \$211  = \$658 ;
  assign \$209  = \$656 ;
  assign \$207  = \$654 ;
  assign \$205  = \$652 ;
  assign \$203  = \$417 ;
  assign \$201  = \$415 ;
  assign \$199  = \$417 ;
  assign \$197  = \$415 ;
  assign \$195  = \$406 ;
  assign \$193  = \$404 ;
  assign \$191  = \$402 ;
  assign \$189  = \$400 ;
  assign \$187  = \$398 ;
  assign \$185  = \$396 ;
  assign \$183  = \$394 ;
  assign \$181  = \$392 ;
  assign \$179  = \$358 ;
  assign \$177  = \$664 ;
  assign \$175  = \$662 ;
  assign \$173  = \$660 ;
  assign \$171  = \$658 ;
  assign \$169  = \$656 ;
  assign \$167  = \$654 ;
  assign \$165  = \$652 ;
  assign \$163  = \$578 ;
  assign \$159  = \$574 ;
  assign \$157  = \$572 ;
  assign \$153  = \$568 ;
  assign \$151  = \$566 ;
  assign \$149  = \$564 ;
  assign \$147  = \$562 ;
  assign \$145  = \$560 ;
  assign \$143  = \$558 ;
  assign \$141  = \$556 ;
  assign \$139  = \$554 ;
  assign \$137  = \$552 ;
  assign \$135  = \$550 ;
  assign \$133  = \$548 ;
  assign \$131  = \$546 ;
  assign \$129  = \$670 ;
  assign \$127  = \$668 ;
  assign \$125  = \$666 ;
  assign \$123  = \$664 ;
  assign \$121  = \$662 ;
  assign \$119  = \$660 ;
  assign \$117  = \$658 ;
  assign \$115  = \$656 ;
  assign \$113  = \$654 ;
  assign \$111  = \$652 ;
  assign \$109  = \$578 ;
  assign \$105  = \$574 ;
  assign \$103  = \$572 ;
  assign \$99  = \$568 ;
  assign \$97  = \$566 ;
  assign \$95  = \$564 ;
  assign \$93  = \$562 ;
  assign \$91  = \$560 ;
  assign \$89  = \$558 ;
  assign \$87  = \$556 ;
  assign \$85  = \$554 ;
  assign \$83  = \$552 ;
  assign \$81  = \$550 ;
  assign \$79  = \$548 ;
  assign \$77  = \$546 ;
  assign \$75  = \$664 ;
  assign \$73  = \$662 ;
  assign \$71  = \$660 ;
  assign \$69  = \$658 ;
  assign \$67  = \$656 ;
  assign \$65  = \$654 ;
  assign \$63  = \$652 ;
  assign \$61  = \$578 ;
  assign \$57  = \$574 ;
  assign \$55  = \$572 ;
  assign \$51  = \$568 ;
  assign \$49  = \$566 ;
  assign \$47  = \$564 ;
  assign \$45  = \$562 ;
  assign \$43  = \$560 ;
  assign \$41  = \$558 ;
  assign \$39  = \$556 ;
  assign \$37  = \$554 ;
  assign \$35  = \$552 ;
  assign \$33  = \$550 ;
  assign \$31  = \$548 ;
  assign \$29  = \$546 ;
  assign \$27  = \$664 ;
  assign \$25  = \$662 ;
  assign \$23  = \$660 ;
  assign \$21  = \$658 ;
  assign \$19  = \$656 ;
  assign \$17  = \$654 ;
  assign \$15  = \$652 ;
  assign \$13  = \$664 ;
  assign \$11  = \$662 ;
  assign \$9  = \$660 ;
  assign \$7  = \$658 ;
  assign \$5  = \$656 ;
  assign \$3  = \$654 ;
  assign \$1  = \$652 ;
  assign \$161  = \$576 ;
  assign \$155  = \$570 ;
  assign \$107  = \$576 ;
  assign \$101  = \$570 ;
  assign \$59  = \$576 ;
  assign \$53  = \$570 ;
  assign \$477  = \$363 ;
  assign \$249  = \$576 ;
  assign \$243  = \$570 ;
  assign \$449  = \$576 ;
  assign \$443  = \$570 ;
  assign \$474  = \$360 ;
  assign \$348  = \$354 ;
  assign \$336  = \$342 ;
endmodule

(* \amaranth.hierarchy  = "top.ID" *)
(* generator = "Amaranth" *)
module ID(s1, s2, s1_data_in, s2_data_in, des, s1data_out, s2data_out, signextended_immediate, instruction_type, it0, it1, it2, it3, ifload, shamt, instruction);
  reg \$auto$verilog_backend.cc:2083:dump_module$2  = 0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:88" *)
  wire [10:0] \$1 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$101 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$103 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$105 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$107 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$109 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$11 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$111 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$113 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$115 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$117 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$119 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$121 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$123 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$125 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$127 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$129 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$13 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$131 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$133 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$135 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$137 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$139 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$141 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$143 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$145 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$147 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$149 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$15 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$151 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$153 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$155 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$157 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$159 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$161 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$163 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$165 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$167 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$169 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$17 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$171 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$173 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$175 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$177 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$179 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$181 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$183 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$185 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$187 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$189 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$19 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$191 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$193 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$195 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$197 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$199 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$201 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$203 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$205 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$207 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$209 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$21 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$211 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$213 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$215 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$217 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$219 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$221 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$223 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$225 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$227 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$229 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$23 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$231 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$233 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$235 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$237 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$239 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$241 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$243 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$245 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$247 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$249 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$25 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$251 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$253 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$255 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$257 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$259 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$261 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$263 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$265 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$267 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$269 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$27 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$271 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$273 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$275 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$277 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$279 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$281 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$283 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$285 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$287 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$289 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$29 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$291 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$293 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$295 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$297 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$299 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$3 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$301 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$303 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$305 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$307 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$309 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$31 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$311 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$313 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$315 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$317 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$319 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$321 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$323 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$325 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$327 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$329 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$33 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$331 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$333 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$335 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$337 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$339 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$341 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$343 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$345 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$347 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$349 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$35 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$351 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$353 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$355 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$357 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$359 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$361 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$363 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$365 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$367 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$369 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$37 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$371 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$373 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$375 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$377 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$379 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$381 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$383 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$385 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$387 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$389 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$39 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$391 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$393 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$395 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$397 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$399 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$401 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$403 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$405 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$407 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$409 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$41 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$411 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$413 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$415 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$417 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$419 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$421 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$423 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$425 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$427 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$429 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$43 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$431 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$433 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$435 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$437 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$439 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$441 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$443 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$445 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$447 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$449 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$45 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$451 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$453 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$455 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$457 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$459 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$461 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$463 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$465 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$467 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$469 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$47 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$471 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$473 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$475 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$477 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$479 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$481 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$483 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$485 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$487 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$489 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$49 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$491 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$493 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$495 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$497 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$499 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$5 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$501 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$503 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$505 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$507 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$509 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$51 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$511 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$513 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$515 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$517 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$519 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$521 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$523 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$525 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$527 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$529 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$53 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$531 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$533 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$535 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$537 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$539 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$541 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$543 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$545 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" *)
  wire \$547 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" *)
  wire \$549 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$55 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" *)
  wire \$551 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:111" *)
  wire \$553 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$555 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$557 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$559 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$561 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$563 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$565 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$567 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$569 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$57 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$571 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$573 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$575 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$577 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$579 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$581 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$583 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$585 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$587 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$589 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$59 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$591 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$593 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$595 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$597 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$599 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$601 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$603 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$605 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$607 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$609 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$61 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$611 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$613 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$615 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$617 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$619 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$621 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$623 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$625 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$627 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$629 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$63 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$631 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$633 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$635 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$637 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$639 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$641 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" *)
  wire \$643 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" *)
  wire \$645 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" *)
  wire \$647 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:111" *)
  wire \$649 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$65 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:109" *)
  wire [31:0] \$651 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:114" *)
  wire [31:0] \$653 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$655 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$657 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$659 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$661 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$663 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$665 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$667 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$669 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$67 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$671 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$673 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$675 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$677 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$679 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$681 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$683 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$685 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$687 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$689 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
  wire \$69 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$691 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$693 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$695 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$697 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$699 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$7 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$701 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$703 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$705 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$707 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$709 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" *)
  wire \$71 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$711 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$713 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$715 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$717 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$719 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$721 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$723 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$725 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$727 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$729 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" *)
  wire \$73 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$731 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$733 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$735 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$737 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$739 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$741 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:120" *)
  wire \$743 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:121" *)
  wire [31:0] \$745 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:126" *)
  wire \$747 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:127" *)
  wire [31:0] \$749 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" *)
  wire \$75 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:137" *)
  wire \$751 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:138" *)
  wire [31:0] \$753 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:145" *)
  wire \$755 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:147" *)
  wire \$757 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:146" *)
  wire [31:0] \$759 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$761 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$763 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$765 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$767 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$769 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:111" *)
  wire \$77 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$771 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$773 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$775 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$777 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$779 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$781 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$783 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$785 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$787 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$789 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$79 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$791 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$793 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$795 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$797 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$799 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$801 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$803 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$805 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$807 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$809 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$81 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$811 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$813 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$815 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$817 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$819 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$821 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$823 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$825 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$827 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$829 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$83 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$831 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$833 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$835 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$837 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$839 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$841 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$843 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$845 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$847 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$849 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$85 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$851 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$853 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$855 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$857 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$859 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$861 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$863 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$865 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$867 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$869 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
  wire \$87 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$871 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$873 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$875 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$877 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$879 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$881 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$883 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$885 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$887 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$889 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$89 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$891 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$893 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$895 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$897 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$899 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
  wire \$9 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$901 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$903 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$905 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$907 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$909 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$91 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$911 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$913 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$915 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *)
  wire \$917 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$919 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$921 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$923 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$925 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$927 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$929 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$93 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$931 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$933 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *)
  wire \$935 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$95 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$97 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *)
  wire \$99 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:18" *)
  output [4:0] des;
  reg [4:0] des;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:29" *)
  output ifload;
  reg ifload;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:12" *)
  input [31:0] instruction;
  wire [31:0] instruction;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:24" *)
  output [2:0] instruction_type;
  reg [2:0] instruction_type;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:25" *)
  output [16:0] it0;
  wire [16:0] it0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:26" *)
  output [10:0] it1;
  wire [10:0] it1;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:27" *)
  output [10:0] it2;
  wire [10:0] it2;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:28" *)
  output [6:0] it3;
  wire [6:0] it3;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:19" *)
  output [4:0] s1;
  wire [4:0] s1;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:13" *)
  input [31:0] s1_data_in;
  wire [31:0] s1_data_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:21" *)
  output [31:0] s1data_out;
  reg [31:0] s1data_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:20" *)
  output [4:0] s2;
  wire [4:0] s2;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:14" *)
  input [31:0] s2_data_in;
  wire [31:0] s2_data_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:22" *)
  output [31:0] s2data_out;
  reg [31:0] s2data_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:30" *)
  output [4:0] shamt;
  reg [4:0] shamt;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:23" *)
  output [31:0] signextended_immediate;
  reg [31:0] signextended_immediate;
  assign \$191  = \$187  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) \$189 ;
  assign \$195  = \$191  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) \$193 ;
  assign \$1  = + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:88" *) { instruction[14:12], instruction[6:0] };
  assign \$199  = \$195  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) \$197 ;
  assign \$203  = \$199  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) \$201 ;
  assign \$221  = \$217  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *) \$219 ;
  assign \$229  = \$225  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *) \$227 ;
  assign \$265  = \$261  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *) \$263 ;
  assign \$287  = \$283  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) \$285 ;
  assign \$291  = \$287  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) \$289 ;
  assign \$317  = \$313  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *) \$315 ;
  assign \$321  = \$317  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *) \$319 ;
  assign \$331  = \$327  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) \$329 ;
  assign \$335  = \$331  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) \$333 ;
  assign \$339  = \$335  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) \$337 ;
  assign \$365  = \$361  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *) \$363 ;
  assign \$369  = \$365  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *) \$367 ;
  assign \$373  = \$369  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *) \$371 ;
  assign \$381  = \$377  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *) \$379 ;
  assign \$389  = \$385  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *) \$387 ;
  assign \$399  = \$395  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *) \$397 ;
  assign \$409  = \$405  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *) \$407 ;
  assign \$451  = \$447  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) \$449 ;
  assign \$465  = \$461  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *) \$463 ;
  assign \$479  = it1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) 6'h33;
  assign \$481  = it1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) 11'h433;
  assign \$483  = \$479  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) \$481 ;
  assign \$485  = it1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) 8'hb3;
  assign \$489  = it1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) 10'h2b3;
  assign \$493  = it1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) 11'h6b3;
  assign \$497  = it1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) 9'h1b3;
  assign \$499  = \$495  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) \$497 ;
  assign \$501  = it1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) 9'h133;
  assign \$505  = it1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) 10'h233;
  assign \$509  = it1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) 10'h333;
  assign \$513  = it1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *) 10'h3b3;
  assign \$517  = it0 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *) 11'h433;
  assign \$519  = it0 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *) 11'h4b3;
  assign \$523  = it0 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *) 11'h533;
  assign \$527  = it0 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *) 11'h5b3;
  assign \$531  = it0 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *) 11'h633;
  assign \$535  = it0 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *) 11'h6b3;
  assign \$539  = it0 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *) 11'h733;
  assign \$543  = it0 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *) 11'h7b3;
  assign \$619  = \$615  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) \$617 ;
  assign \$643  = it3 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" *) 6'h37;
  assign \$645  = it3 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" *) 5'h17;
  assign \$647  = \$643  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" *) \$645 ;
  assign \$649  = it3 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:111" *) 7'h6f;
  assign \$651  = + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:109" *) { instruction[31:12], 1'h0 };
  assign \$653  = + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:114" *) { 1'h0, instruction[31], instruction[19:12], instruction[20], instruction[30:21], 1'h0 };
  assign \$681  = \$677  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *) \$679 ;
  assign \$699  = \$695  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) \$697 ;
  assign \$703  = \$699  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) \$701 ;
  assign \$733  = \$729  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *) \$731 ;
  assign \$745  = + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:121" *) { 1'h0, instruction[31:25], instruction[11:7] };
  assign \$749  = + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:127" *) { 2'h0, instruction[31], instruction[7], instruction[30:25], instruction[11:8], 1'h0 };
  assign \$755  = ~ (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:145" *) instruction[31];
  assign \$759  = + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:146" *) { 1'h0, instruction[31:20] };
  assign \$765  = \$761  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *) \$763 ;
  assign \$775  = \$771  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *) \$773 ;
  assign \$849  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *) 6'h23;
  assign \$851  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *) 8'ha3;
  assign \$855  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *) 9'h123;
  assign \$859  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *) 7'h63;
  assign \$861  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *) 8'he3;
  assign \$865  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *) 10'h263;
  assign \$869  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *) 10'h2e3;
  assign \$871  = \$867  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *) \$869 ;
  assign \$873  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *) 10'h363;
  assign \$877  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" *) 10'h3e3;
  assign \$881  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) 5'h13;
  assign \$883  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) 9'h113;
  assign \$885  = \$881  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) \$883 ;
  assign \$887  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) 9'h193;
  assign \$889  = \$885  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) \$887 ;
  assign \$891  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) 10'h213;
  assign \$895  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) 10'h313;
  assign \$899  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) 10'h393;
  assign \$903  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) 7'h67;
  assign \$907  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) 8'h93;
  assign \$911  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) 10'h293;
  assign \$915  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) 11'h693;
  assign \$917  = \$913  | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" *) \$915 ;
  assign \$919  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *) 2'h3;
  assign \$921  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *) 8'h83;
  assign \$925  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *) 9'h103;
  assign \$929  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *) 10'h203;
  assign \$933  = it2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" *) 10'h283;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$2 ) begin end
    signextended_immediate = 32'd0;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" *)
    casez ({ \$649 , \$647  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" */
      2'b?1:
          signextended_immediate = \$651 ;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:111" */
      2'b1?:
          signextended_immediate = \$653 ;
    endcase
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
    casez ({ \$741 , \$723 , \$685 , \$663  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" */
      4'b???1:
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:120" *)
          casez (\$743 )
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:120" */
            1'h1:
                signextended_immediate = \$745 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:122" */
            default:
                signextended_immediate = { 20'hfffff, instruction[31:25], instruction[11:7] };
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" */
      4'b??1?:
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:126" *)
          casez (\$747 )
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:126" */
            1'h1:
                signextended_immediate = \$749 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:128" */
            default:
                signextended_immediate = { 19'h7ffff, instruction[31], instruction[7], instruction[30:25], instruction[11:8], 1'h0 };
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" */
      4'b?1??:
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:137" *)
          casez (\$751 )
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:137" */
            1'h1:
                signextended_immediate = \$753 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:139" */
            default:
                signextended_immediate = { 20'hfffff, instruction[31:20] };
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" */
      4'b1???:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:145" *)
          casez ({ \$757 , \$755  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:145" */
            2'b?1:
                signextended_immediate = \$759 ;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:147" */
            2'b1?:
                signextended_immediate = { 20'hfffff, instruction[31:20] };
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$2 ) begin end
    shamt = 5'h00;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
    casez ({ \$847 , \$829 , \$791 , \$769  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" */
      4'b???1:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" */
      4'b??1?:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" */
      4'b?1??:
          shamt = instruction[24:20];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$2 ) begin end
    ifload = 1'h0;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
    casez ({ \$935 , \$917 , \$879 , \$857  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" */
      4'b???1:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" */
      4'b??1?:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" */
      4'b?1??:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" */
      4'b1???:
          ifload = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$2 ) begin end
    instruction_type = 3'h0;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
    casez (\$39 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" */
      1'h1:
          instruction_type = 3'h7;
    endcase
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
    casez (\$69 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" */
      1'h1:
          instruction_type = 3'h2;
    endcase
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" *)
    casez ({ \$77 , \$75  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" */
      2'b?1:
          instruction_type = 3'h5;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:111" */
      2'b1?:
          instruction_type = 3'h6;
    endcase
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
    casez ({ \$165 , \$147 , \$109 , \$87  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" */
      4'b???1:
          instruction_type = 3'h3;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" */
      4'b??1?:
          instruction_type = 3'h4;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" */
      4'b?1??:
          instruction_type = 3'h1;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" */
      4'b1???:
          instruction_type = 3'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$2 ) begin end
    s1data_out = 32'd0;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
    casez (\$203 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" */
      1'h1:
          s1data_out = s1_data_in;
    endcase
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
    casez (\$233 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" */
      1'h1:
          s1data_out = s1_data_in;
    endcase
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
    casez ({ \$321 , \$303 , \$265 , \$243  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" */
      4'b???1:
          s1data_out = s1_data_in;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" */
      4'b??1?:
          s1data_out = s1_data_in;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" */
      4'b?1??:
          s1data_out = s1_data_in;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" */
      4'b1???:
          s1data_out = s1_data_in;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$2 ) begin end
    s2data_out = 32'd0;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
    casez (\$359 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" */
      1'h1:
          s2data_out = s2_data_in;
    endcase
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
    casez (\$389 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" */
      1'h1:
          s2data_out = s2_data_in;
    endcase
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
    casez ({ \$477 , \$459 , \$421 , \$399  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" */
      4'b???1:
          s2data_out = s2_data_in;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" */
      4'b??1?:
          s2data_out = s2_data_in;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$2 ) begin end
    des = 5'h00;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" *)
    casez (\$515 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:94" */
      1'h1:
          des = instruction[11:7];
    endcase
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" *)
    casez (\$545 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:100" */
      1'h1:
          des = instruction[11:7];
    endcase
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" *)
    casez ({ \$553 , \$551  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:106" */
      2'b?1:
          des = instruction[11:7];
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:111" */
      2'b1?:
          des = instruction[11:7];
    endcase
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" *)
    casez ({ \$641 , \$623 , \$585 , \$563  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:115" */
      4'b???1:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:124" */
      4'b??1?:
          /* empty */;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:132" */
      4'b?1??:
          des = instruction[11:7];
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:141" */
      4'b1???:
          des = instruction[11:7];
    endcase
  end
  assign s2 = instruction[24:20];
  assign s1 = instruction[19:15];
  assign it0 = { instruction[31:25], instruction[14:12], instruction[6:0] };
  assign it1 = { instruction[30], instruction[14:12], instruction[6:0] };
  assign it2 = \$1 ;
  assign it3 = instruction[6:0];
  assign \$757  = instruction[31];
  assign \$845  = \$933 ;
  assign \$841  = \$929 ;
  assign \$837  = \$925 ;
  assign \$833  = \$921 ;
  assign \$831  = \$919 ;
  assign \$827  = \$915 ;
  assign \$823  = \$911 ;
  assign \$819  = \$907 ;
  assign \$815  = \$903 ;
  assign \$811  = \$899 ;
  assign \$807  = \$895 ;
  assign \$803  = \$891 ;
  assign \$799  = \$887 ;
  assign \$795  = \$883 ;
  assign \$793  = \$881 ;
  assign \$789  = \$877 ;
  assign \$785  = \$873 ;
  assign \$781  = \$869 ;
  assign \$777  = \$865 ;
  assign \$773  = \$861 ;
  assign \$771  = \$859 ;
  assign \$767  = \$855 ;
  assign \$763  = \$851 ;
  assign \$761  = \$849 ;
  assign \$753  = \$759 ;
  assign \$751  = \$755 ;
  assign \$747  = \$755 ;
  assign \$743  = \$755 ;
  assign \$739  = \$933 ;
  assign \$735  = \$929 ;
  assign \$731  = \$925 ;
  assign \$727  = \$921 ;
  assign \$725  = \$919 ;
  assign \$721  = \$915 ;
  assign \$717  = \$911 ;
  assign \$713  = \$907 ;
  assign \$709  = \$903 ;
  assign \$705  = \$899 ;
  assign \$701  = \$895 ;
  assign \$697  = \$891 ;
  assign \$693  = \$887 ;
  assign \$689  = \$883 ;
  assign \$687  = \$881 ;
  assign \$683  = \$877 ;
  assign \$679  = \$873 ;
  assign \$675  = \$869 ;
  assign \$671  = \$865 ;
  assign \$667  = \$861 ;
  assign \$665  = \$859 ;
  assign \$661  = \$855 ;
  assign \$657  = \$851 ;
  assign \$655  = \$849 ;
  assign \$639  = \$933 ;
  assign \$635  = \$929 ;
  assign \$631  = \$925 ;
  assign \$627  = \$921 ;
  assign \$625  = \$919 ;
  assign \$621  = \$915 ;
  assign \$617  = \$911 ;
  assign \$613  = \$907 ;
  assign \$609  = \$903 ;
  assign \$605  = \$899 ;
  assign \$601  = \$895 ;
  assign \$597  = \$891 ;
  assign \$593  = \$887 ;
  assign \$589  = \$883 ;
  assign \$587  = \$881 ;
  assign \$583  = \$877 ;
  assign \$579  = \$873 ;
  assign \$575  = \$869 ;
  assign \$571  = \$865 ;
  assign \$567  = \$861 ;
  assign \$565  = \$859 ;
  assign \$561  = \$855 ;
  assign \$557  = \$851 ;
  assign \$555  = \$849 ;
  assign \$553  = \$649 ;
  assign \$549  = \$645 ;
  assign \$547  = \$643 ;
  assign \$475  = \$933 ;
  assign \$471  = \$929 ;
  assign \$467  = \$925 ;
  assign \$463  = \$921 ;
  assign \$461  = \$919 ;
  assign \$457  = \$915 ;
  assign \$453  = \$911 ;
  assign \$449  = \$907 ;
  assign \$445  = \$903 ;
  assign \$441  = \$899 ;
  assign \$437  = \$895 ;
  assign \$433  = \$891 ;
  assign \$429  = \$887 ;
  assign \$425  = \$883 ;
  assign \$423  = \$881 ;
  assign \$419  = \$877 ;
  assign \$415  = \$873 ;
  assign \$411  = \$869 ;
  assign \$407  = \$865 ;
  assign \$403  = \$861 ;
  assign \$401  = \$859 ;
  assign \$397  = \$855 ;
  assign \$393  = \$851 ;
  assign \$391  = \$849 ;
  assign \$387  = \$543 ;
  assign \$383  = \$539 ;
  assign \$379  = \$535 ;
  assign \$375  = \$531 ;
  assign \$371  = \$527 ;
  assign \$367  = \$523 ;
  assign \$363  = \$519 ;
  assign \$361  = \$517 ;
  assign \$357  = \$513 ;
  assign \$353  = \$509 ;
  assign \$349  = \$505 ;
  assign \$345  = \$501 ;
  assign \$341  = \$497 ;
  assign \$337  = \$493 ;
  assign \$333  = \$489 ;
  assign \$329  = \$485 ;
  assign \$325  = \$481 ;
  assign \$323  = \$479 ;
  assign \$319  = \$933 ;
  assign \$315  = \$929 ;
  assign \$311  = \$925 ;
  assign \$307  = \$921 ;
  assign \$305  = \$919 ;
  assign \$301  = \$915 ;
  assign \$297  = \$911 ;
  assign \$293  = \$907 ;
  assign \$289  = \$903 ;
  assign \$285  = \$899 ;
  assign \$281  = \$895 ;
  assign \$277  = \$891 ;
  assign \$273  = \$887 ;
  assign \$269  = \$883 ;
  assign \$267  = \$881 ;
  assign \$263  = \$877 ;
  assign \$259  = \$873 ;
  assign \$255  = \$869 ;
  assign \$251  = \$865 ;
  assign \$247  = \$861 ;
  assign \$245  = \$859 ;
  assign \$241  = \$855 ;
  assign \$237  = \$851 ;
  assign \$235  = \$849 ;
  assign \$231  = \$543 ;
  assign \$227  = \$539 ;
  assign \$223  = \$535 ;
  assign \$219  = \$531 ;
  assign \$215  = \$527 ;
  assign \$211  = \$523 ;
  assign \$207  = \$519 ;
  assign \$205  = \$517 ;
  assign \$201  = \$513 ;
  assign \$197  = \$509 ;
  assign \$193  = \$505 ;
  assign \$189  = \$501 ;
  assign \$185  = \$497 ;
  assign \$181  = \$493 ;
  assign \$177  = \$489 ;
  assign \$173  = \$485 ;
  assign \$169  = \$481 ;
  assign \$167  = \$479 ;
  assign \$163  = \$933 ;
  assign \$159  = \$929 ;
  assign \$155  = \$925 ;
  assign \$151  = \$921 ;
  assign \$149  = \$919 ;
  assign \$145  = \$915 ;
  assign \$141  = \$911 ;
  assign \$137  = \$907 ;
  assign \$133  = \$903 ;
  assign \$129  = \$899 ;
  assign \$125  = \$895 ;
  assign \$121  = \$891 ;
  assign \$117  = \$887 ;
  assign \$113  = \$883 ;
  assign \$111  = \$881 ;
  assign \$107  = \$877 ;
  assign \$103  = \$873 ;
  assign \$99  = \$869 ;
  assign \$95  = \$865 ;
  assign \$91  = \$861 ;
  assign \$89  = \$859 ;
  assign \$85  = \$855 ;
  assign \$81  = \$851 ;
  assign \$79  = \$849 ;
  assign \$77  = \$649 ;
  assign \$73  = \$645 ;
  assign \$71  = \$643 ;
  assign \$67  = \$543 ;
  assign \$63  = \$539 ;
  assign \$59  = \$535 ;
  assign \$55  = \$531 ;
  assign \$51  = \$527 ;
  assign \$47  = \$523 ;
  assign \$43  = \$519 ;
  assign \$41  = \$517 ;
  assign \$37  = \$513 ;
  assign \$33  = \$509 ;
  assign \$29  = \$505 ;
  assign \$25  = \$501 ;
  assign \$21  = \$497 ;
  assign \$17  = \$493 ;
  assign \$13  = \$489 ;
  assign \$9  = \$485 ;
  assign \$5  = \$481 ;
  assign \$3  = \$479 ;
  assign \$427  = \$885 ;
  assign \$405  = \$775 ;
  assign \$395  = \$765 ;
  assign \$729  = \$465 ;
  assign \$863  = \$775 ;
  assign \$327  = \$483 ;
  assign \$853  = \$765 ;
  assign \$691  = \$885 ;
  assign \$309  = \$465 ;
  assign \$669  = \$775 ;
  assign \$271  = \$885 ;
  assign \$835  = \$465 ;
  assign \$659  = \$765 ;
  assign \$249  = \$775 ;
  assign \$239  = \$765 ;
  assign \$923  = \$465 ;
  assign \$209  = \$365 ;
  assign \$629  = \$465 ;
  assign \$171  = \$483 ;
  assign \$153  = \$465 ;
  assign \$591  = \$885 ;
  assign \$115  = \$885 ;
  assign \$797  = \$885 ;
  assign \$93  = \$775 ;
  assign \$569  = \$775 ;
  assign \$83  = \$765 ;
  assign \$559  = \$765 ;
  assign \$75  = \$647 ;
  assign \$551  = \$647 ;
  assign \$45  = \$365 ;
  assign \$7  = \$483 ;
  assign \$521  = \$365 ;
  assign \$431  = \$889 ;
  assign \$867  = \$409 ;
  assign \$857  = \$399 ;
  assign \$695  = \$889 ;
  assign \$313  = \$733 ;
  assign \$673  = \$409 ;
  assign \$275  = \$889 ;
  assign \$839  = \$733 ;
  assign \$663  = \$399 ;
  assign \$927  = \$733 ;
  assign \$253  = \$409 ;
  assign \$243  = \$399 ;
  assign \$487  = \$331 ;
  assign \$213  = \$369 ;
  assign \$633  = \$733 ;
  assign \$175  = \$331 ;
  assign \$157  = \$733 ;
  assign \$595  = \$889 ;
  assign \$801  = \$889 ;
  assign \$119  = \$889 ;
  assign \$573  = \$409 ;
  assign \$97  = \$409 ;
  assign \$469  = \$733 ;
  assign \$87  = \$399 ;
  assign \$563  = \$399 ;
  assign \$769  = \$399 ;
  assign \$779  = \$409 ;
  assign \$49  = \$369 ;
  assign \$525  = \$369 ;
  assign \$11  = \$331 ;
  assign \$677  = \$871 ;
  assign \$843  = \$317 ;
  assign \$931  = \$317 ;
  assign \$279  = \$699 ;
  assign \$935  = \$321 ;
  assign \$257  = \$871 ;
  assign \$435  = \$699 ;
  assign \$491  = \$335 ;
  assign \$637  = \$317 ;
  assign \$217  = \$373 ;
  assign \$179  = \$335 ;
  assign \$161  = \$317 ;
  assign \$599  = \$699 ;
  assign \$805  = \$699 ;
  assign \$123  = \$699 ;
  assign \$473  = \$317 ;
  assign \$577  = \$871 ;
  assign \$101  = \$871 ;
  assign \$413  = \$871 ;
  assign \$893  = \$699 ;
  assign \$737  = \$317 ;
  assign \$783  = \$871 ;
  assign \$897  = \$703 ;
  assign \$53  = \$373 ;
  assign \$529  = \$373 ;
  assign \$15  = \$335 ;
  assign \$847  = \$321 ;
  assign \$283  = \$703 ;
  assign \$439  = \$703 ;
  assign \$495  = \$339 ;
  assign \$261  = \$681 ;
  assign \$641  = \$321 ;
  assign \$377  = \$221 ;
  assign \$183  = \$339 ;
  assign \$165  = \$321 ;
  assign \$603  = \$703 ;
  assign \$809  = \$703 ;
  assign \$477  = \$321 ;
  assign \$127  = \$703 ;
  assign \$417  = \$681 ;
  assign \$581  = \$681 ;
  assign \$105  = \$681 ;
  assign \$741  = \$321 ;
  assign \$787  = \$681 ;
  assign \$875  = \$681 ;
  assign \$57  = \$221 ;
  assign \$707  = \$901 ;
  assign \$533  = \$221 ;
  assign \$19  = \$339 ;
  assign \$443  = \$287 ;
  assign \$225  = \$381 ;
  assign \$187  = \$499 ;
  assign \$813  = \$287 ;
  assign \$447  = \$291 ;
  assign \$607  = \$287 ;
  assign \$421  = \$265 ;
  assign \$131  = \$287 ;
  assign \$585  = \$265 ;
  assign \$879  = \$265 ;
  assign \$109  = \$265 ;
  assign \$905  = \$711 ;
  assign \$791  = \$265 ;
  assign \$685  = \$265 ;
  assign \$901  = \$287 ;
  assign \$61  = \$381 ;
  assign \$537  = \$381 ;
  assign \$23  = \$499 ;
  assign \$343  = \$499 ;
  assign \$817  = \$291 ;
  assign \$611  = \$291 ;
  assign \$295  = \$451 ;
  assign \$135  = \$291 ;
  assign \$503  = \$191 ;
  assign \$715  = \$909 ;
  assign \$385  = \$229 ;
  assign \$711  = \$291 ;
  assign \$65  = \$229 ;
  assign \$347  = \$191 ;
  assign \$541  = \$229 ;
  assign \$27  = \$191 ;
  assign \$455  = \$299 ;
  assign \$821  = \$451 ;
  assign \$507  = \$195 ;
  assign \$615  = \$451 ;
  assign \$511  = \$199 ;
  assign \$913  = \$719 ;
  assign \$139  = \$451 ;
  assign \$909  = \$451 ;
  assign \$515  = \$203 ;
  assign \$351  = \$195 ;
  assign \$69  = \$389 ;
  assign \$545  = \$389 ;
  assign \$459  = \$303 ;
  assign \$31  = \$195 ;
  assign \$233  = \$389 ;
  assign \$719  = \$619 ;
  assign \$143  = \$619 ;
  assign \$723  = \$623 ;
  assign \$355  = \$199 ;
  assign \$35  = \$199 ;
  assign \$825  = \$619 ;
  assign \$299  = \$619 ;
  assign \$147  = \$917 ;
  assign \$829  = \$917 ;
  assign \$359  = \$203 ;
  assign \$303  = \$917 ;
  assign \$39  = \$203 ;
  assign \$623  = \$917 ;
endmodule

(* \amaranth.hierarchy  = "top.IF_ID_pipeline" *)
(* generator = "Amaranth" *)
module IF_ID_pipeline(jump, stall, IF2_out, inst_out, rst, clk, branch);
  reg \$auto$verilog_backend.cc:2083:dump_module$3  = 0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:48" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:68" *)
  wire \$11 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:72" *)
  wire \$13 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:76" *)
  wire \$15 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:80" *)
  wire \$17 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:48" *)
  wire \$19 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:52" *)
  wire \$21 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:56" *)
  wire \$23 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:60" *)
  wire \$25 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:64" *)
  wire \$27 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:68" *)
  wire \$29 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:52" *)
  wire \$3 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:72" *)
  wire \$31 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:76" *)
  wire \$33 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:80" *)
  wire \$35 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:56" *)
  wire \$5 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:60" *)
  wire \$7 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:64" *)
  wire \$9 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:16" *)
  input [31:0] IF2_out;
  wire [31:0] IF2_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:22" *)
  input branch;
  wire branch;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:27" *)
  reg branch_next = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:27" *)
  reg \branch_next$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:29" *)
  reg branch_next2 = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:29" *)
  reg \branch_next2$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:31" *)
  reg branch_next3 = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:31" *)
  reg \branch_next3$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:17" *)
  reg [31:0] buffer = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:17" *)
  reg [31:0] \buffer$next ;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:14" *)
  reg [31:0] inst_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:19" *)
  output [31:0] inst_out;
  reg [31:0] inst_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:15" *)
  reg [31:0] inst_prev = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:15" *)
  reg [31:0] \inst_prev$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:23" *)
  input jump;
  wire jump;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:28" *)
  reg jump_next = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:28" *)
  reg \jump_next$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:30" *)
  reg jump_next2 = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:30" *)
  reg \jump_next2$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:32" *)
  reg jump_next3 = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:32" *)
  reg \jump_next3$next ;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:21" *)
  input stall;
  wire stall;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:24" *)
  reg stall_next = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:24" *)
  reg \stall_next$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:25" *)
  reg stall_next2 = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:25" *)
  reg \stall_next2$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:26" *)
  reg stall_next3 = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:26" *)
  reg \stall_next3$next ;
  always @(posedge clk)
    buffer <= \buffer$next ;
  always @(posedge clk)
    branch_next <= \branch_next$next ;
  always @(posedge clk)
    jump_next <= \jump_next$next ;
  always @(posedge clk)
    branch_next2 <= \branch_next2$next ;
  always @(posedge clk)
    jump_next2 <= \jump_next2$next ;
  always @(posedge clk)
    branch_next3 <= \branch_next3$next ;
  always @(posedge clk)
    jump_next3 <= \jump_next3$next ;
  always @(posedge clk)
    stall_next <= \stall_next$next ;
  always @(posedge clk)
    stall_next2 <= \stall_next2$next ;
  always @(posedge clk)
    stall_next3 <= \stall_next3$next ;
  always @(posedge clk)
    inst_prev <= \inst_prev$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$3 ) begin end
    \buffer$next  = IF2_out;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \buffer$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$3 ) begin end
    \branch_next$next  = branch;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \branch_next$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$3 ) begin end
    \inst_prev$next  = inst_out;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \inst_prev$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$3 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:48" *)
    casez ({ \$17 , \$15 , \$13 , \$11 , \$9 , \$7 , \$5 , \$3 , \$1  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:48" */
      9'b????????1:
          inst_in = IF2_out;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:52" */
      9'b???????1?:
          inst_in = 32'd0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:56" */
      9'b??????1??:
          inst_in = 32'd0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:60" */
      9'b?????1???:
          inst_in = buffer;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:64" */
      9'b????1????:
          inst_in = 32'd0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:68" */
      9'b???1?????:
          inst_in = 32'd0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:72" */
      9'b??1??????:
          inst_in = buffer;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:76" */
      9'b?1???????:
          inst_in = 32'd0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:80" */
      9'h1??:
          inst_in = 32'd0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:84" */
      default:
          inst_in = IF2_out;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$3 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:48" *)
    casez ({ \$35 , \$33 , \$31 , \$29 , \$27 , \$25 , \$23 , \$21 , \$19  })
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:48" */
      9'b????????1:
          inst_out = inst_prev;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:52" */
      9'b???????1?:
          inst_out = 32'd0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:56" */
      9'b??????1??:
          inst_out = 32'd0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:60" */
      9'b?????1???:
          inst_out = inst_in;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:64" */
      9'b????1????:
          inst_out = 32'd0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:68" */
      9'b???1?????:
          inst_out = 32'd0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:72" */
      9'b??1??????:
          inst_out = inst_in;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:76" */
      9'b?1???????:
          inst_out = 32'd0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:80" */
      9'h1??:
          inst_out = 32'd0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:84" */
      default:
          inst_out = inst_in;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$3 ) begin end
    \jump_next$next  = jump;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \jump_next$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$3 ) begin end
    \branch_next2$next  = branch_next;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \branch_next2$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$3 ) begin end
    \jump_next2$next  = jump_next;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \jump_next2$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$3 ) begin end
    \branch_next3$next  = branch_next2;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \branch_next3$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$3 ) begin end
    \jump_next3$next  = jump_next2;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \jump_next3$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$3 ) begin end
    \stall_next$next  = stall;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \stall_next$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$3 ) begin end
    \stall_next2$next  = stall_next;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \stall_next2$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$3 ) begin end
    \stall_next3$next  = stall_next2;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \stall_next3$next  = 1'h0;
    endcase
  end
  assign \$1  = stall_next;
  assign \$3  = branch_next;
  assign \$5  = jump_next;
  assign \$7  = stall_next2;
  assign \$9  = branch_next2;
  assign \$11  = jump_next2;
  assign \$13  = stall_next3;
  assign \$15  = branch_next3;
  assign \$17  = jump_next3;
  assign \$19  = stall_next;
  assign \$21  = branch_next;
  assign \$23  = jump_next;
  assign \$25  = stall_next2;
  assign \$27  = branch_next2;
  assign \$29  = jump_next2;
  assign \$31  = stall_next3;
  assign \$33  = branch_next3;
  assign \$35  = jump_next3;
endmodule

(* \amaranth.hierarchy  = "top.M1_M2_pipeline" *)
(* generator = "Amaranth" *)
module M1_M2_pipeline(web_out, reg_file_write_addr_in, reg_file_write_in, memory_reg_addr_out_out, s1_in, s2_in, csb_in, web_in, reg_file_write_out, s1_out, s2_out, rst, clk, csb_out);
  reg \$auto$verilog_backend.cc:2083:dump_module$4  = 0;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:26" *)
  input csb_in;
  wire csb_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:27" *)
  output csb_out;
  reg csb_out = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:27" *)
  reg \csb_out$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:18" *)
  wire [31:0] memory_data_out_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:16" *)
  input [4:0] memory_reg_addr_out_out;
  wire [4:0] memory_reg_addr_out_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:17" *)
  output [4:0] reg_file_write_addr_in;
  reg [4:0] reg_file_write_addr_in = 5'h00;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:17" *)
  reg [4:0] \reg_file_write_addr_in$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:19" *)
  reg [31:0] reg_file_write_data_in = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:19" *)
  reg [31:0] \reg_file_write_data_in$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:14" *)
  input reg_file_write_in;
  wire reg_file_write_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:15" *)
  output reg_file_write_out;
  reg reg_file_write_out = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:15" *)
  reg \reg_file_write_out$next ;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:21" *)
  input [4:0] s1_in;
  wire [4:0] s1_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:23" *)
  output [4:0] s1_out;
  reg [4:0] s1_out = 5'h00;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:23" *)
  reg [4:0] \s1_out$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:22" *)
  input [4:0] s2_in;
  wire [4:0] s2_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:24" *)
  output [4:0] s2_out;
  reg [4:0] s2_out = 5'h00;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:24" *)
  reg [4:0] \s2_out$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:28" *)
  input web_in;
  wire web_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:29" *)
  output web_out;
  reg web_out = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:29" *)
  reg \web_out$next ;
  always @(posedge clk)
    reg_file_write_out <= \reg_file_write_out$next ;
  always @(posedge clk)
    reg_file_write_addr_in <= \reg_file_write_addr_in$next ;
  always @(posedge clk)
    reg_file_write_data_in <= \reg_file_write_data_in$next ;
  always @(posedge clk)
    s1_out <= \s1_out$next ;
  always @(posedge clk)
    s2_out <= \s2_out$next ;
  always @(posedge clk)
    csb_out <= \csb_out$next ;
  always @(posedge clk)
    web_out <= \web_out$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$4 ) begin end
    \reg_file_write_out$next  = reg_file_write_in;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \reg_file_write_out$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$4 ) begin end
    \reg_file_write_addr_in$next  = memory_reg_addr_out_out;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \reg_file_write_addr_in$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$4 ) begin end
    \reg_file_write_data_in$next  = 32'd0;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \reg_file_write_data_in$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$4 ) begin end
    \s1_out$next  = s1_in;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \s1_out$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$4 ) begin end
    \s2_out$next  = s2_in;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \s2_out$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$4 ) begin end
    \csb_out$next  = csb_in;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \csb_out$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$4 ) begin end
    \web_out$next  = web_in;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \web_out$next  = 1'h0;
    endcase
  end
  assign memory_data_out_out = 32'd0;
endmodule

(* \amaranth.hierarchy  = "top.M2_WB_pipeline" *)
(* generator = "Amaranth" *)
module M2_WB_pipeline(web_out, reg_file_write_out, reg_file_write_in, memory_reg_addr_out_out, memory_data_out_out, s1_in, s2_in, csb_in, web_in, reg_file_write_addr_in, reg_file_write_data_in, rst, clk, csb_out);
  reg \$auto$verilog_backend.cc:2083:dump_module$5  = 0;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:26" *)
  input csb_in;
  wire csb_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:27" *)
  output csb_out;
  reg csb_out = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:27" *)
  reg \csb_out$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:18" *)
  input [31:0] memory_data_out_out;
  wire [31:0] memory_data_out_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:16" *)
  input [4:0] memory_reg_addr_out_out;
  wire [4:0] memory_reg_addr_out_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:17" *)
  output [4:0] reg_file_write_addr_in;
  reg [4:0] reg_file_write_addr_in = 5'h00;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:17" *)
  reg [4:0] \reg_file_write_addr_in$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:19" *)
  output [31:0] reg_file_write_data_in;
  reg [31:0] reg_file_write_data_in = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:19" *)
  reg [31:0] \reg_file_write_data_in$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:14" *)
  input reg_file_write_in;
  wire reg_file_write_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:15" *)
  output reg_file_write_out;
  reg reg_file_write_out = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:15" *)
  reg \reg_file_write_out$next ;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:21" *)
  input [4:0] s1_in;
  wire [4:0] s1_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:23" *)
  reg [4:0] s1_out = 5'h00;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:23" *)
  reg [4:0] \s1_out$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:22" *)
  input [4:0] s2_in;
  wire [4:0] s2_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:24" *)
  reg [4:0] s2_out = 5'h00;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:24" *)
  reg [4:0] \s2_out$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:28" *)
  input web_in;
  wire web_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:29" *)
  output web_out;
  reg web_out = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:29" *)
  reg \web_out$next ;
  always @(posedge clk)
    reg_file_write_out <= \reg_file_write_out$next ;
  always @(posedge clk)
    reg_file_write_addr_in <= \reg_file_write_addr_in$next ;
  always @(posedge clk)
    reg_file_write_data_in <= \reg_file_write_data_in$next ;
  always @(posedge clk)
    s1_out <= \s1_out$next ;
  always @(posedge clk)
    s2_out <= \s2_out$next ;
  always @(posedge clk)
    csb_out <= \csb_out$next ;
  always @(posedge clk)
    web_out <= \web_out$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$5 ) begin end
    \reg_file_write_out$next  = reg_file_write_in;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \reg_file_write_out$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$5 ) begin end
    \reg_file_write_addr_in$next  = memory_reg_addr_out_out;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \reg_file_write_addr_in$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$5 ) begin end
    \reg_file_write_data_in$next  = memory_data_out_out;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \reg_file_write_data_in$next  = 32'd0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$5 ) begin end
    \s1_out$next  = s1_in;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \s1_out$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$5 ) begin end
    \s2_out$next  = s2_in;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \s2_out$next  = 5'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$5 ) begin end
    \csb_out$next  = csb_in;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \csb_out$next  = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$5 ) begin end
    \web_out$next  = web_in;
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \web_out$next  = 1'h0;
    endcase
  end
endmodule

(* \amaranth.hierarchy  = "top.forwarding_alu" *)
(* generator = "Amaranth" *)
module forwarding_alu(s2, s1_data, s2_data, des0, val0, csb0, web0, ra, rb, s1);
  reg \$auto$verilog_backend.cc:2083:dump_module$6  = 0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:30" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:31" *)
  wire \$11 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:39" *)
  wire \$13 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:39" *)
  wire \$15 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:39" *)
  wire \$17 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:39" *)
  wire \$19 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:39" *)
  wire \$21 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:40" *)
  wire \$23 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:30" *)
  wire \$3 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:30" *)
  wire \$5 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:30" *)
  wire \$7 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:30" *)
  wire \$9 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:19" *)
  input csb0;
  wire csb0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:17" *)
  input [4:0] des0;
  wire [4:0] des0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:23" *)
  output [31:0] ra;
  reg [31:0] ra;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:24" *)
  output [31:0] rb;
  reg [31:0] rb;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:14" *)
  input [4:0] s1;
  wire [4:0] s1;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:12" *)
  input [31:0] s1_data;
  wire [31:0] s1_data;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:15" *)
  input [4:0] s2;
  wire [4:0] s2;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:13" *)
  input [31:0] s2_data;
  wire [31:0] s2_data;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:18" *)
  input [31:0] val0;
  wire [31:0] val0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:20" *)
  input web0;
  wire web0;
  assign \$9  = \$5  & (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:30" *) \$7 ;
  assign \$11  = | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:31" *) s1;
  assign \$13  = s2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:39" *) des0;
  assign \$15  = ~ (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:39" *) csb0;
  assign \$17  = \$13  & (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:39" *) \$15 ;
  assign \$1  = s1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:30" *) des0;
  assign \$21  = \$17  & (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:39" *) \$19 ;
  assign \$23  = | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:40" *) s2;
  assign \$5  = \$1  & (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:30" *) \$3 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$6 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:30" *)
    casez (\$9 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:30" */
      1'h1:
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:31" *)
          casez (\$11 )
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:31" */
            1'h1:
                ra = val0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:33" */
            default:
                ra = s1_data;
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:36" */
      default:
          ra = s1_data;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$6 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:39" *)
    casez (\$21 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:39" */
      1'h1:
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:40" *)
          casez (\$23 )
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:40" */
            1'h1:
                rb = val0;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:42" */
            default:
                rb = s2_data;
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:45" */
      default:
          rb = s2_data;
    endcase
  end
  assign \$7  = web0;
  assign \$19  = web0;
  assign \$3  = \$15 ;
endmodule

(* \amaranth.hierarchy  = "top.id_mux" *)
(* generator = "Amaranth" *)
module id_mux(des_id, s1_id, s2_id, s1data_out_id, s2data_out_id, signextended_immediate_id, instruction_type_id, it0_id, it1_id, it2_id, it3_id, ifload_id, shamt_id, s1, s2, s1data_out, s2data_out, des, signextended_immediate, instruction_type, it0
, it1, it2, it3, shamt, stall);
  reg \$auto$verilog_backend.cc:2083:dump_module$7  = 0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
  wire \$11 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
  wire \$13 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
  wire \$15 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
  wire \$17 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
  wire \$19 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
  wire \$21 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
  wire \$23 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
  wire \$25 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
  wire \$3 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
  wire \$5 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
  wire \$7 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
  wire \$9 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:37" *)
  output [4:0] des;
  reg [4:0] des;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:20" *)
  input [4:0] des_id;
  wire [4:0] des_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:48" *)
  reg ifload;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:31" *)
  input ifload_id;
  wire ifload_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:43" *)
  output [2:0] instruction_type;
  reg [2:0] instruction_type;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:26" *)
  input [2:0] instruction_type_id;
  wire [2:0] instruction_type_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:44" *)
  output [16:0] it0;
  reg [16:0] it0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:27" *)
  input [16:0] it0_id;
  wire [16:0] it0_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:45" *)
  output [10:0] it1;
  reg [10:0] it1;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:28" *)
  input [10:0] it1_id;
  wire [10:0] it1_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:46" *)
  output [10:0] it2;
  reg [10:0] it2;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:29" *)
  input [10:0] it2_id;
  wire [10:0] it2_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:47" *)
  output [6:0] it3;
  reg [6:0] it3;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:30" *)
  input [6:0] it3_id;
  wire [6:0] it3_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:38" *)
  output [4:0] s1;
  reg [4:0] s1;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:21" *)
  input [4:0] s1_id;
  wire [4:0] s1_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:40" *)
  output [31:0] s1data_out;
  reg [31:0] s1data_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:23" *)
  input [31:0] s1data_out_id;
  wire [31:0] s1data_out_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:39" *)
  output [4:0] s2;
  reg [4:0] s2;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:22" *)
  input [4:0] s2_id;
  wire [4:0] s2_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:41" *)
  output [31:0] s2data_out;
  reg [31:0] s2data_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:24" *)
  input [31:0] s2data_out_id;
  wire [31:0] s2data_out_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:49" *)
  output [4:0] shamt;
  reg [4:0] shamt;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:32" *)
  input [4:0] shamt_id;
  wire [4:0] shamt_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:42" *)
  output [31:0] signextended_immediate;
  reg [31:0] signextended_immediate;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:25" *)
  input [31:0] signextended_immediate_id;
  wire [31:0] signextended_immediate_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:34" *)
  input stall;
  wire stall;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
    casez (\$1 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" */
      1'h1:
          des = 5'h00;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:68" */
      default:
          des = des_id;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
    casez (\$3 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" */
      1'h1:
          s1 = 5'h00;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:68" */
      default:
          s1 = s1_id;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
    casez (\$21 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" */
      1'h1:
          it3 = 7'h00;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:68" */
      default:
          it3 = it3_id;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
    casez (\$23 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" */
      1'h1:
          ifload = 1'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:68" */
      default:
          ifload = ifload_id;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
    casez (\$25 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" */
      1'h1:
          shamt = 5'h00;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:68" */
      default:
          shamt = shamt_id;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
    casez (\$5 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" */
      1'h1:
          s2 = 5'h00;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:68" */
      default:
          s2 = s2_id;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
    casez (\$7 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" */
      1'h1:
          s1data_out = 32'd0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:68" */
      default:
          s1data_out = s1data_out_id;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
    casez (\$9 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" */
      1'h1:
          s2data_out = 32'd0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:68" */
      default:
          s2data_out = s2data_out_id;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
    casez (\$11 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" */
      1'h1:
          signextended_immediate = 32'd0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:68" */
      default:
          signextended_immediate = signextended_immediate_id;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
    casez (\$13 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" */
      1'h1:
          instruction_type = 3'h0;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:68" */
      default:
          instruction_type = instruction_type_id;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
    casez (\$15 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" */
      1'h1:
          it0 = 17'h00000;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:68" */
      default:
          it0 = it0_id;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
    casez (\$17 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" */
      1'h1:
          it1 = 11'h000;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:68" */
      default:
          it1 = it1_id;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" *)
    casez (\$19 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:53" */
      1'h1:
          it2 = 11'h000;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:68" */
      default:
          it2 = it2_id;
    endcase
  end
  assign \$1  = stall;
  assign \$3  = stall;
  assign \$5  = stall;
  assign \$7  = stall;
  assign \$9  = stall;
  assign \$11  = stall;
  assign \$13  = stall;
  assign \$15  = stall;
  assign \$17  = stall;
  assign \$19  = stall;
  assign \$21  = stall;
  assign \$23  = stall;
  assign \$25  = stall;
endmodule

(* \amaranth.hierarchy  = "top.pc_controller" *)
(* generator = "Amaranth" *)
module pc_controller(branch, jump, pc_in, ra, immediate, read_flag, pc, rst, clk, stall);
  reg \$auto$verilog_backend.cc:2083:dump_module$8  = 0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:29" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:37" *)
  wire [31:0] \$10 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:37" *)
  wire [31:0] \$12 ;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/back/rtlil.py:569" *)
  wire \$13 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:37" *)
  wire [32:0] \$16 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:37" *)
  wire [33:0] \$18 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:40" *)
  wire [32:0] \$20 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:40" *)
  wire [31:0] \$21 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:40" *)
  wire [31:0] \$23 ;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/back/rtlil.py:569" *)
  wire \$24 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:40" *)
  wire [32:0] \$27 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:43" *)
  wire [6:0] \$29 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:33" *)
  wire \$3 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:43" *)
  wire [6:0] \$30 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:36" *)
  wire \$5 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:39" *)
  wire \$7 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:37" *)
  wire [33:0] \$9 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:14" *)
  input branch;
  wire branch;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:16" *)
  input [31:0] immediate;
  wire [31:0] immediate;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:15" *)
  input jump;
  wire jump;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:23" *)
  output [5:0] pc;
  reg [5:0] pc = 6'h00;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:23" *)
  reg [5:0] \pc$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:18" *)
  input [5:0] pc_in;
  wire [5:0] pc_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:17" *)
  input [31:0] ra;
  wire [31:0] ra;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:20" *)
  input read_flag;
  wire read_flag;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:13" *)
  input stall;
  wire stall;
  assign \$16  = pc_in + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:37" *) \$12 ;
  assign \$18  = \$16  - (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:37" *) 2'h3;
  assign \$1  = ~ (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:29" *) read_flag;
  assign \$27  = ra + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:40" *) \$23 ;
  assign \$30  = pc_in + (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:43" *) 1'h1;
  always @(posedge clk)
    pc <= \pc$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$8 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:29" *)
    casez (\$1 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:29" */
      1'h1:
          \pc$next  = 6'h00;
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:32" */
      default:
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:33" *)
          casez ({ \$7 , \$5 , \$3  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:33" */
            3'b??1:
                \pc$next  = pc_in;
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:36" */
            3'b?1?:
                \pc$next  = \$18 [5:0];
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:39" */
            3'b1??:
                \pc$next  = \$27 [5:0];
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:42" */
            default:
                \pc$next  = \$30 [5:0];
          endcase
    endcase
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (rst)
      1'h1:
          \pc$next  = 6'h00;
    endcase
  end
  assign \$9  = \$18 ;
  assign \$20  = \$27 ;
  assign \$29  = \$30 ;
  assign \$3  = stall;
  assign \$5  = branch;
  assign \$7  = jump;
  assign \$13  = 1'h0;
  assign \$12  = \$10 ;
  assign \$24  = 1'h0;
  assign \$23  = \$21 ;
  assign \$10  = { 2'h0, immediate[31:2] };
  assign \$21  = { 2'h0, immediate[31:2] };
endmodule

(* \amaranth.hierarchy  = "top.reg_file" *)
(* generator = "Amaranth" *)
module reg_file(write_alu, csb_mem, web_mem, write_mem, pc, load_Rs1_addr, load_Rs2_addr, write_Rs1_data, write_Rs2_data, write_addr_mem, write_data_mem, write_addr_alu, write_data_alu, \$signal , gpio_input, neg_rst, neg_clk, csb_alu);
  reg \$auto$verilog_backend.cc:2083:dump_module$9  = 0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:42" *)
  wire \$33 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:55" *)
  wire \$35 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:55" *)
  wire \$37 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:55" *)
  wire \$39 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:66" *)
  wire \$41 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:42" *)
  wire \$74 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:47" *)
  wire \$76 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:55" *)
  wire \$78 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:55" *)
  wire \$80 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:55" *)
  wire \$82 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:66" *)
  wire \$84 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  output [31:0] \$signal ;
  reg [31:0] \$signal  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$1  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$1$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$10  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$10$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$11  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$11$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$12  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$12$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$13  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$13$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$14  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$14$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$15  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$15$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$16  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$16$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$17  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$17$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$18  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$18$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$19  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$19$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$2  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$2$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$20  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$20$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$21  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$21$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$22  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$22$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$23  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$23$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$24  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$24$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$25  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$25$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$26  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$26$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$27  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$27$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$28  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$28$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$29  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$29$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$3  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$3$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$30  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$30$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$31  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$31$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$32  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$32$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$4  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$4$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$43  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$43$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$44  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$44$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$45  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$45$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$46  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$46$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$47  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$47$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$48  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$48$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$49  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$49$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$5  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$5$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$50  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$50$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$51  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$51$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$52  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$52$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$53  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$53$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$54  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$54$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$55  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$55$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$56  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$56$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$57  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$57$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$58  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$58$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$59  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$59$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$6  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$6$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$60  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$60$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$61  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$61$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$62  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$62$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$63  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$63$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$64  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$64$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$65  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$65$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$66  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$66$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$67  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$67$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$68  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$68$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$69  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$69$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$7  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$7$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$70  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$70$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$71  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$71$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$72  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$72$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$73  = 32'd0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$73$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$8  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$8$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$9  = 1'h0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:34" *)
  reg \$signal$9$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  reg [31:0] \$signal$next ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:20" *)
  input csb_alu;
  wire csb_alu;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:26" *)
  input csb_mem;
  wire csb_mem;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:29" *)
  input [31:0] gpio_input;
  wire [31:0] gpio_input;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:13" *)
  input [4:0] load_Rs1_addr;
  wire [4:0] load_Rs1_addr;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:14" *)
  input [4:0] load_Rs2_addr;
  wire [4:0] load_Rs2_addr;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/ir.py:527" *)
  input neg_clk;
  wire neg_clk;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/ir.py:527" *)
  input neg_rst;
  wire neg_rst;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:15" *)
  input [5:0] pc;
  wire [5:0] pc;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:27" *)
  input web_mem;
  wire web_mem;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:32" *)
  output [31:0] write_Rs1_data;
  reg [31:0] write_Rs1_data;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:33" *)
  output [31:0] write_Rs2_data;
  reg [31:0] write_Rs2_data;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:18" *)
  input [4:0] write_addr_alu;
  wire [4:0] write_addr_alu;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:24" *)
  input [4:0] write_addr_mem;
  wire [4:0] write_addr_mem;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:17" *)
  input write_alu;
  wire write_alu;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:19" *)
  input [31:0] write_data_alu;
  wire [31:0] write_data_alu;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:25" *)
  input [31:0] write_data_mem;
  wire [31:0] write_data_mem;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:23" *)
  input write_mem;
  wire write_mem;
  always @(posedge neg_clk)
    \$signal$15  <= \$signal$15$next ;
  always @(posedge neg_clk)
    \$signal$16  <= \$signal$16$next ;
  always @(posedge neg_clk)
    \$signal$17  <= \$signal$17$next ;
  always @(posedge neg_clk)
    \$signal$18  <= \$signal$18$next ;
  always @(posedge neg_clk)
    \$signal$19  <= \$signal$19$next ;
  always @(posedge neg_clk)
    \$signal$20  <= \$signal$20$next ;
  always @(posedge neg_clk)
    \$signal$21  <= \$signal$21$next ;
  always @(posedge neg_clk)
    \$signal$22  <= \$signal$22$next ;
  always @(posedge neg_clk)
    \$signal$23  <= \$signal$23$next ;
  always @(posedge neg_clk)
    \$signal$24  <= \$signal$24$next ;
  always @(posedge neg_clk)
    \$signal$25  <= \$signal$25$next ;
  always @(posedge neg_clk)
    \$signal$26  <= \$signal$26$next ;
  always @(posedge neg_clk)
    \$signal$27  <= \$signal$27$next ;
  always @(posedge neg_clk)
    \$signal$28  <= \$signal$28$next ;
  always @(posedge neg_clk)
    \$signal$29  <= \$signal$29$next ;
  always @(posedge neg_clk)
    \$signal$30  <= \$signal$30$next ;
  always @(posedge neg_clk)
    \$signal$31  <= \$signal$31$next ;
  always @(posedge neg_clk)
    \$signal$32  <= \$signal$32$next ;
  always @(posedge neg_clk)
    \$signal$43  <= \$signal$43$next ;
  always @(posedge neg_clk)
    \$signal$44  <= \$signal$44$next ;
  always @(posedge neg_clk)
    \$signal$45  <= \$signal$45$next ;
  always @(posedge neg_clk)
    \$signal$46  <= \$signal$46$next ;
  always @(posedge neg_clk)
    \$signal$47  <= \$signal$47$next ;
  always @(posedge neg_clk)
    \$signal$48  <= \$signal$48$next ;
  always @(posedge neg_clk)
    \$signal$49  <= \$signal$49$next ;
  always @(posedge neg_clk)
    \$signal$50  <= \$signal$50$next ;
  always @(posedge neg_clk)
    \$signal$51  <= \$signal$51$next ;
  always @(posedge neg_clk)
    \$signal$52  <= \$signal$52$next ;
  always @(posedge neg_clk)
    \$signal$53  <= \$signal$53$next ;
  always @(posedge neg_clk)
    \$signal$54  <= \$signal$54$next ;
  always @(posedge neg_clk)
    \$signal$55  <= \$signal$55$next ;
  always @(posedge neg_clk)
    \$signal$56  <= \$signal$56$next ;
  always @(posedge neg_clk)
    \$signal$57  <= \$signal$57$next ;
  always @(posedge neg_clk)
    \$signal$58  <= \$signal$58$next ;
  always @(posedge neg_clk)
    \$signal$59  <= \$signal$59$next ;
  always @(posedge neg_clk)
    \$signal$60  <= \$signal$60$next ;
  always @(posedge neg_clk)
    \$signal$61  <= \$signal$61$next ;
  always @(posedge neg_clk)
    \$signal$62  <= \$signal$62$next ;
  always @(posedge neg_clk)
    \$signal$63  <= \$signal$63$next ;
  always @(posedge neg_clk)
    \$signal$64  <= \$signal$64$next ;
  always @(posedge neg_clk)
    \$signal$65  <= \$signal$65$next ;
  always @(posedge neg_clk)
    \$signal$66  <= \$signal$66$next ;
  always @(posedge neg_clk)
    \$signal$67  <= \$signal$67$next ;
  always @(posedge neg_clk)
    \$signal$68  <= \$signal$68$next ;
  always @(posedge neg_clk)
    \$signal$69  <= \$signal$69$next ;
  always @(posedge neg_clk)
    \$signal$70  <= \$signal$70$next ;
  always @(posedge neg_clk)
    \$signal$71  <= \$signal$71$next ;
  always @(posedge neg_clk)
    \$signal$72  <= \$signal$72$next ;
  always @(posedge neg_clk)
    \$signal  <= \$signal$next ;
  always @(posedge neg_clk)
    \$signal$73  <= \$signal$73$next ;
  assign \$74  = pc < (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:42" *) 2'h3;
  assign \$76  = ~ (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:47" *) \$signal$3 ;
  assign \$78  = ~ (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:55" *) csb_mem;
  assign \$82  = \$78  & (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:55" *) \$80 ;
  always @(posedge neg_clk)
    \$signal$1  <= \$signal$1$next ;
  always @(posedge neg_clk)
    \$signal$2  <= \$signal$2$next ;
  always @(posedge neg_clk)
    \$signal$3  <= \$signal$3$next ;
  always @(posedge neg_clk)
    \$signal$4  <= \$signal$4$next ;
  always @(posedge neg_clk)
    \$signal$5  <= \$signal$5$next ;
  always @(posedge neg_clk)
    \$signal$6  <= \$signal$6$next ;
  always @(posedge neg_clk)
    \$signal$7  <= \$signal$7$next ;
  always @(posedge neg_clk)
    \$signal$8  <= \$signal$8$next ;
  always @(posedge neg_clk)
    \$signal$9  <= \$signal$9$next ;
  always @(posedge neg_clk)
    \$signal$10  <= \$signal$10$next ;
  always @(posedge neg_clk)
    \$signal$11  <= \$signal$11$next ;
  always @(posedge neg_clk)
    \$signal$12  <= \$signal$12$next ;
  always @(posedge neg_clk)
    \$signal$13  <= \$signal$13$next ;
  always @(posedge neg_clk)
    \$signal$14  <= \$signal$14$next ;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$9 ) begin end
    \$signal$1$next  = \$signal$1 ;
    \$signal$2$next  = \$signal$2 ;
    \$signal$3$next  = \$signal$3 ;
    \$signal$4$next  = \$signal$4 ;
    \$signal$5$next  = \$signal$5 ;
    \$signal$6$next  = \$signal$6 ;
    \$signal$7$next  = \$signal$7 ;
    \$signal$8$next  = \$signal$8 ;
    \$signal$9$next  = \$signal$9 ;
    \$signal$10$next  = \$signal$10 ;
    \$signal$11$next  = \$signal$11 ;
    \$signal$12$next  = \$signal$12 ;
    \$signal$13$next  = \$signal$13 ;
    \$signal$14$next  = \$signal$14 ;
    \$signal$15$next  = \$signal$15 ;
    \$signal$16$next  = \$signal$16 ;
    \$signal$17$next  = \$signal$17 ;
    \$signal$18$next  = \$signal$18 ;
    \$signal$19$next  = \$signal$19 ;
    \$signal$20$next  = \$signal$20 ;
    \$signal$21$next  = \$signal$21 ;
    \$signal$22$next  = \$signal$22 ;
    \$signal$23$next  = \$signal$23 ;
    \$signal$24$next  = \$signal$24 ;
    \$signal$25$next  = \$signal$25 ;
    \$signal$26$next  = \$signal$26 ;
    \$signal$27$next  = \$signal$27 ;
    \$signal$28$next  = \$signal$28 ;
    \$signal$29$next  = \$signal$29 ;
    \$signal$30$next  = \$signal$30 ;
    \$signal$31$next  = \$signal$31 ;
    \$signal$32$next  = \$signal$32 ;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:42" *)
    casez (\$33 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:42" */
      1'h1:
          \$signal$3$next  = 1'h0;
    endcase
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:54" *)
    casez (write_mem)
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:54" */
      1'h1:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:55" *)
          casez (\$39 )
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:55" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:57" *)
                casez (write_addr_mem)
                  5'h00:
                      \$signal$1$next  = 1'h1;
                  5'h01:
                      \$signal$2$next  = 1'h1;
                  5'h02:
                      \$signal$3$next  = 1'h1;
                  5'h03:
                      \$signal$4$next  = 1'h1;
                  5'h04:
                      \$signal$5$next  = 1'h1;
                  5'h05:
                      \$signal$6$next  = 1'h1;
                  5'h06:
                      \$signal$7$next  = 1'h1;
                  5'h07:
                      \$signal$8$next  = 1'h1;
                  5'h08:
                      \$signal$9$next  = 1'h1;
                  5'h09:
                      \$signal$10$next  = 1'h1;
                  5'h0a:
                      \$signal$11$next  = 1'h1;
                  5'h0b:
                      \$signal$12$next  = 1'h1;
                  5'h0c:
                      \$signal$13$next  = 1'h1;
                  5'h0d:
                      \$signal$14$next  = 1'h1;
                  5'h0e:
                      \$signal$15$next  = 1'h1;
                  5'h0f:
                      \$signal$16$next  = 1'h1;
                  5'h10:
                      \$signal$17$next  = 1'h1;
                  5'h11:
                      \$signal$18$next  = 1'h1;
                  5'h12:
                      \$signal$19$next  = 1'h1;
                  5'h13:
                      \$signal$20$next  = 1'h1;
                  5'h14:
                      \$signal$21$next  = 1'h1;
                  5'h15:
                      \$signal$22$next  = 1'h1;
                  5'h16:
                      \$signal$23$next  = 1'h1;
                  5'h17:
                      \$signal$24$next  = 1'h1;
                  5'h18:
                      \$signal$25$next  = 1'h1;
                  5'h19:
                      \$signal$26$next  = 1'h1;
                  5'h1a:
                      \$signal$27$next  = 1'h1;
                  5'h1b:
                      \$signal$28$next  = 1'h1;
                  5'h1c:
                      \$signal$29$next  = 1'h1;
                  5'h1d:
                      \$signal$30$next  = 1'h1;
                  5'h1e:
                      \$signal$31$next  = 1'h1;
                  5'h??:
                      \$signal$32$next  = 1'h1;
                endcase
          endcase
    endcase
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:65" *)
    casez (write_alu)
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:65" */
      1'h1:
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:66" *)
          casez (\$41 )
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:66" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:68" *)
                casez (write_addr_alu)
                  5'h00:
                      \$signal$1$next  = 1'h1;
                  5'h01:
                      \$signal$2$next  = 1'h1;
                  5'h02:
                      \$signal$3$next  = 1'h1;
                  5'h03:
                      \$signal$4$next  = 1'h1;
                  5'h04:
                      \$signal$5$next  = 1'h1;
                  5'h05:
                      \$signal$6$next  = 1'h1;
                  5'h06:
                      \$signal$7$next  = 1'h1;
                  5'h07:
                      \$signal$8$next  = 1'h1;
                  5'h08:
                      \$signal$9$next  = 1'h1;
                  5'h09:
                      \$signal$10$next  = 1'h1;
                  5'h0a:
                      \$signal$11$next  = 1'h1;
                  5'h0b:
                      \$signal$12$next  = 1'h1;
                  5'h0c:
                      \$signal$13$next  = 1'h1;
                  5'h0d:
                      \$signal$14$next  = 1'h1;
                  5'h0e:
                      \$signal$15$next  = 1'h1;
                  5'h0f:
                      \$signal$16$next  = 1'h1;
                  5'h10:
                      \$signal$17$next  = 1'h1;
                  5'h11:
                      \$signal$18$next  = 1'h1;
                  5'h12:
                      \$signal$19$next  = 1'h1;
                  5'h13:
                      \$signal$20$next  = 1'h1;
                  5'h14:
                      \$signal$21$next  = 1'h1;
                  5'h15:
                      \$signal$22$next  = 1'h1;
                  5'h16:
                      \$signal$23$next  = 1'h1;
                  5'h17:
                      \$signal$24$next  = 1'h1;
                  5'h18:
                      \$signal$25$next  = 1'h1;
                  5'h19:
                      \$signal$26$next  = 1'h1;
                  5'h1a:
                      \$signal$27$next  = 1'h1;
                  5'h1b:
                      \$signal$28$next  = 1'h1;
                  5'h1c:
                      \$signal$29$next  = 1'h1;
                  5'h1d:
                      \$signal$30$next  = 1'h1;
                  5'h1e:
                      \$signal$31$next  = 1'h1;
                  5'h??:
                      \$signal$32$next  = 1'h1;
                endcase
          endcase
    endcase
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (neg_rst)
      1'h1:
        begin
          \$signal$1$next  = 1'h0;
          \$signal$2$next  = 1'h0;
          \$signal$3$next  = 1'h0;
          \$signal$4$next  = 1'h0;
          \$signal$5$next  = 1'h0;
          \$signal$6$next  = 1'h0;
          \$signal$7$next  = 1'h0;
          \$signal$8$next  = 1'h0;
          \$signal$9$next  = 1'h0;
          \$signal$10$next  = 1'h0;
          \$signal$11$next  = 1'h0;
          \$signal$12$next  = 1'h0;
          \$signal$13$next  = 1'h0;
          \$signal$14$next  = 1'h0;
          \$signal$15$next  = 1'h0;
          \$signal$16$next  = 1'h0;
          \$signal$17$next  = 1'h0;
          \$signal$18$next  = 1'h0;
          \$signal$19$next  = 1'h0;
          \$signal$20$next  = 1'h0;
          \$signal$21$next  = 1'h0;
          \$signal$22$next  = 1'h0;
          \$signal$23$next  = 1'h0;
          \$signal$24$next  = 1'h0;
          \$signal$25$next  = 1'h0;
          \$signal$26$next  = 1'h0;
          \$signal$27$next  = 1'h0;
          \$signal$28$next  = 1'h0;
          \$signal$29$next  = 1'h0;
          \$signal$30$next  = 1'h0;
          \$signal$31$next  = 1'h0;
          \$signal$32$next  = 1'h0;
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$9 ) begin end
    \$signal$43$next  = \$signal$43 ;
    \$signal$44$next  = \$signal$44 ;
    \$signal$45$next  = \$signal$45 ;
    \$signal$46$next  = \$signal$46 ;
    \$signal$47$next  = \$signal$47 ;
    \$signal$48$next  = \$signal$48 ;
    \$signal$49$next  = \$signal$49 ;
    \$signal$50$next  = \$signal$50 ;
    \$signal$51$next  = \$signal$51 ;
    \$signal$52$next  = \$signal$52 ;
    \$signal$53$next  = \$signal$53 ;
    \$signal$54$next  = \$signal$54 ;
    \$signal$55$next  = \$signal$55 ;
    \$signal$56$next  = \$signal$56 ;
    \$signal$57$next  = \$signal$57 ;
    \$signal$58$next  = \$signal$58 ;
    \$signal$59$next  = \$signal$59 ;
    \$signal$60$next  = \$signal$60 ;
    \$signal$61$next  = \$signal$61 ;
    \$signal$62$next  = \$signal$62 ;
    \$signal$63$next  = \$signal$63 ;
    \$signal$64$next  = \$signal$64 ;
    \$signal$65$next  = \$signal$65 ;
    \$signal$66$next  = \$signal$66 ;
    \$signal$67$next  = \$signal$67 ;
    \$signal$68$next  = \$signal$68 ;
    \$signal$69$next  = \$signal$69 ;
    \$signal$70$next  = \$signal$70 ;
    \$signal$71$next  = \$signal$71 ;
    \$signal$72$next  = \$signal$72 ;
    \$signal$73$next  = \$signal$73 ;
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:42" *)
    casez (\$74 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:42" */
      1'h1:
          \$signal$45$next  = 32'd63;
    endcase
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:47" *)
    casez (\$76 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:47" */
      1'h1:
          \$signal$45$next  = 32'd63;
    endcase
    begin
        \$signal$next  = gpio_input;
    end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:54" *)
    casez (write_mem)
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:54" */
      1'h1:
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:55" *)
          casez (\$82 )
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:55" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:56" *)
                casez (write_addr_mem)
                  5'h00:
                      \$signal$43$next  = write_data_mem;
                  5'h01:
                      \$signal$44$next  = write_data_mem;
                  5'h02:
                      \$signal$45$next  = write_data_mem;
                  5'h03:
                      \$signal$46$next  = write_data_mem;
                  5'h04:
                      \$signal$47$next  = write_data_mem;
                  5'h05:
                      \$signal$48$next  = write_data_mem;
                  5'h06:
                      \$signal$49$next  = write_data_mem;
                  5'h07:
                      \$signal$50$next  = write_data_mem;
                  5'h08:
                      \$signal$51$next  = write_data_mem;
                  5'h09:
                      \$signal$52$next  = write_data_mem;
                  5'h0a:
                      \$signal$53$next  = write_data_mem;
                  5'h0b:
                      \$signal$54$next  = write_data_mem;
                  5'h0c:
                      \$signal$55$next  = write_data_mem;
                  5'h0d:
                      \$signal$56$next  = write_data_mem;
                  5'h0e:
                      \$signal$57$next  = write_data_mem;
                  5'h0f:
                      \$signal$58$next  = write_data_mem;
                  5'h10:
                      \$signal$59$next  = write_data_mem;
                  5'h11:
                      \$signal$60$next  = write_data_mem;
                  5'h12:
                      \$signal$61$next  = write_data_mem;
                  5'h13:
                      \$signal$62$next  = write_data_mem;
                  5'h14:
                      \$signal$63$next  = write_data_mem;
                  5'h15:
                      \$signal$64$next  = write_data_mem;
                  5'h16:
                      \$signal$65$next  = write_data_mem;
                  5'h17:
                      \$signal$66$next  = write_data_mem;
                  5'h18:
                      \$signal$67$next  = write_data_mem;
                  5'h19:
                      \$signal$68$next  = write_data_mem;
                  5'h1a:
                      \$signal$69$next  = write_data_mem;
                  5'h1b:
                      \$signal$70$next  = write_data_mem;
                  5'h1c:
                      \$signal$71$next  = write_data_mem;
                  5'h1d:
                      \$signal$72$next  = write_data_mem;
                  5'h1e:
                      \$signal$next  = write_data_mem;
                  5'h??:
                      \$signal$73$next  = write_data_mem;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:58" */
            default:
                \$signal$43$next  = 32'd0;
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:61" */
      default:
          \$signal$43$next  = 32'd0;
    endcase
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:65" *)
    casez (write_alu)
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:65" */
      1'h1:
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:66" *)
          casez (\$84 )
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:66" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:67" *)
                casez (write_addr_alu)
                  5'h00:
                      \$signal$43$next  = write_data_alu;
                  5'h01:
                      \$signal$44$next  = write_data_alu;
                  5'h02:
                      \$signal$45$next  = write_data_alu;
                  5'h03:
                      \$signal$46$next  = write_data_alu;
                  5'h04:
                      \$signal$47$next  = write_data_alu;
                  5'h05:
                      \$signal$48$next  = write_data_alu;
                  5'h06:
                      \$signal$49$next  = write_data_alu;
                  5'h07:
                      \$signal$50$next  = write_data_alu;
                  5'h08:
                      \$signal$51$next  = write_data_alu;
                  5'h09:
                      \$signal$52$next  = write_data_alu;
                  5'h0a:
                      \$signal$53$next  = write_data_alu;
                  5'h0b:
                      \$signal$54$next  = write_data_alu;
                  5'h0c:
                      \$signal$55$next  = write_data_alu;
                  5'h0d:
                      \$signal$56$next  = write_data_alu;
                  5'h0e:
                      \$signal$57$next  = write_data_alu;
                  5'h0f:
                      \$signal$58$next  = write_data_alu;
                  5'h10:
                      \$signal$59$next  = write_data_alu;
                  5'h11:
                      \$signal$60$next  = write_data_alu;
                  5'h12:
                      \$signal$61$next  = write_data_alu;
                  5'h13:
                      \$signal$62$next  = write_data_alu;
                  5'h14:
                      \$signal$63$next  = write_data_alu;
                  5'h15:
                      \$signal$64$next  = write_data_alu;
                  5'h16:
                      \$signal$65$next  = write_data_alu;
                  5'h17:
                      \$signal$66$next  = write_data_alu;
                  5'h18:
                      \$signal$67$next  = write_data_alu;
                  5'h19:
                      \$signal$68$next  = write_data_alu;
                  5'h1a:
                      \$signal$69$next  = write_data_alu;
                  5'h1b:
                      \$signal$70$next  = write_data_alu;
                  5'h1c:
                      \$signal$71$next  = write_data_alu;
                  5'h1d:
                      \$signal$72$next  = write_data_alu;
                  5'h1e:
                      \$signal$next  = write_data_alu;
                  5'h??:
                      \$signal$73$next  = write_data_alu;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:69" */
            default:
                \$signal$43$next  = 32'd0;
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:72" */
      default:
          \$signal$43$next  = 32'd0;
    endcase
    (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/xfrm.py:519" *)
    casez (neg_rst)
      1'h1:
        begin
          \$signal$43$next  = 32'd0;
          \$signal$44$next  = 32'd0;
          \$signal$45$next  = 32'd0;
          \$signal$46$next  = 32'd0;
          \$signal$47$next  = 32'd0;
          \$signal$48$next  = 32'd0;
          \$signal$49$next  = 32'd0;
          \$signal$50$next  = 32'd0;
          \$signal$51$next  = 32'd0;
          \$signal$52$next  = 32'd0;
          \$signal$53$next  = 32'd0;
          \$signal$54$next  = 32'd0;
          \$signal$55$next  = 32'd0;
          \$signal$56$next  = 32'd0;
          \$signal$57$next  = 32'd0;
          \$signal$58$next  = 32'd0;
          \$signal$59$next  = 32'd0;
          \$signal$60$next  = 32'd0;
          \$signal$61$next  = 32'd0;
          \$signal$62$next  = 32'd0;
          \$signal$63$next  = 32'd0;
          \$signal$64$next  = 32'd0;
          \$signal$65$next  = 32'd0;
          \$signal$66$next  = 32'd0;
          \$signal$67$next  = 32'd0;
          \$signal$68$next  = 32'd0;
          \$signal$69$next  = 32'd0;
          \$signal$70$next  = 32'd0;
          \$signal$71$next  = 32'd0;
          \$signal$72$next  = 32'd0;
          \$signal$next  = 32'd0;
          \$signal$73$next  = 32'd0;
        end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$9 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:51" *)
    casez (load_Rs1_addr)
      5'h00:
          write_Rs1_data = \$signal$43 ;
      5'h01:
          write_Rs1_data = \$signal$44 ;
      5'h02:
          write_Rs1_data = \$signal$45 ;
      5'h03:
          write_Rs1_data = \$signal$46 ;
      5'h04:
          write_Rs1_data = \$signal$47 ;
      5'h05:
          write_Rs1_data = \$signal$48 ;
      5'h06:
          write_Rs1_data = \$signal$49 ;
      5'h07:
          write_Rs1_data = \$signal$50 ;
      5'h08:
          write_Rs1_data = \$signal$51 ;
      5'h09:
          write_Rs1_data = \$signal$52 ;
      5'h0a:
          write_Rs1_data = \$signal$53 ;
      5'h0b:
          write_Rs1_data = \$signal$54 ;
      5'h0c:
          write_Rs1_data = \$signal$55 ;
      5'h0d:
          write_Rs1_data = \$signal$56 ;
      5'h0e:
          write_Rs1_data = \$signal$57 ;
      5'h0f:
          write_Rs1_data = \$signal$58 ;
      5'h10:
          write_Rs1_data = \$signal$59 ;
      5'h11:
          write_Rs1_data = \$signal$60 ;
      5'h12:
          write_Rs1_data = \$signal$61 ;
      5'h13:
          write_Rs1_data = \$signal$62 ;
      5'h14:
          write_Rs1_data = \$signal$63 ;
      5'h15:
          write_Rs1_data = \$signal$64 ;
      5'h16:
          write_Rs1_data = \$signal$65 ;
      5'h17:
          write_Rs1_data = \$signal$66 ;
      5'h18:
          write_Rs1_data = \$signal$67 ;
      5'h19:
          write_Rs1_data = \$signal$68 ;
      5'h1a:
          write_Rs1_data = \$signal$69 ;
      5'h1b:
          write_Rs1_data = \$signal$70 ;
      5'h1c:
          write_Rs1_data = \$signal$71 ;
      5'h1d:
          write_Rs1_data = \$signal$72 ;
      5'h1e:
          write_Rs1_data = \$signal ;
      5'h??:
          write_Rs1_data = \$signal$73 ;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$9 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:52" *)
    casez (load_Rs2_addr)
      5'h00:
          write_Rs2_data = \$signal$43 ;
      5'h01:
          write_Rs2_data = \$signal$44 ;
      5'h02:
          write_Rs2_data = \$signal$45 ;
      5'h03:
          write_Rs2_data = \$signal$46 ;
      5'h04:
          write_Rs2_data = \$signal$47 ;
      5'h05:
          write_Rs2_data = \$signal$48 ;
      5'h06:
          write_Rs2_data = \$signal$49 ;
      5'h07:
          write_Rs2_data = \$signal$50 ;
      5'h08:
          write_Rs2_data = \$signal$51 ;
      5'h09:
          write_Rs2_data = \$signal$52 ;
      5'h0a:
          write_Rs2_data = \$signal$53 ;
      5'h0b:
          write_Rs2_data = \$signal$54 ;
      5'h0c:
          write_Rs2_data = \$signal$55 ;
      5'h0d:
          write_Rs2_data = \$signal$56 ;
      5'h0e:
          write_Rs2_data = \$signal$57 ;
      5'h0f:
          write_Rs2_data = \$signal$58 ;
      5'h10:
          write_Rs2_data = \$signal$59 ;
      5'h11:
          write_Rs2_data = \$signal$60 ;
      5'h12:
          write_Rs2_data = \$signal$61 ;
      5'h13:
          write_Rs2_data = \$signal$62 ;
      5'h14:
          write_Rs2_data = \$signal$63 ;
      5'h15:
          write_Rs2_data = \$signal$64 ;
      5'h16:
          write_Rs2_data = \$signal$65 ;
      5'h17:
          write_Rs2_data = \$signal$66 ;
      5'h18:
          write_Rs2_data = \$signal$67 ;
      5'h19:
          write_Rs2_data = \$signal$68 ;
      5'h1a:
          write_Rs2_data = \$signal$69 ;
      5'h1b:
          write_Rs2_data = \$signal$70 ;
      5'h1c:
          write_Rs2_data = \$signal$71 ;
      5'h1d:
          write_Rs2_data = \$signal$72 ;
      5'h1e:
          write_Rs2_data = \$signal ;
      5'h??:
          write_Rs2_data = \$signal$73 ;
    endcase
  end
  assign \$37  = web_mem;
  assign \$41  = csb_alu;
  assign \$80  = web_mem;
  assign \$84  = csb_alu;
  assign \$35  = \$78 ;
  assign \$33  = \$74 ;
  assign \$39  = \$82 ;
endmodule

(* \amaranth.hierarchy  = "top.stall_unit" *)
(* generator = "Amaranth" *)
module stall_unit(csb, web, ID_src1, ID_src2, next_dest, stall);
  reg \$auto$verilog_backend.cc:2083:dump_module$10  = 0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:25" *)
  wire \$1 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:27" *)
  wire \$11 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:33" *)
  wire \$13 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:25" *)
  wire \$3 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:25" *)
  wire \$5 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:26" *)
  wire \$7 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:32" *)
  wire \$9 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:15" *)
  input [4:0] ID_src1;
  wire [4:0] ID_src1;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:16" *)
  input [4:0] ID_src2;
  wire [4:0] ID_src2;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:13" *)
  input csb;
  wire csb;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:17" *)
  input [4:0] next_dest;
  wire [4:0] next_dest;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:19" *)
  output stall;
  reg stall;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:14" *)
  input web;
  wire web;
  assign \$9  = ID_src2 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:32" *) next_dest;
  assign \$11  = | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:27" *) ID_src1;
  assign \$13  = | (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:33" *) ID_src2;
  assign \$1  = ~ (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:25" *) csb;
  assign \$5  = \$1  & (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:25" *) \$3 ;
  assign \$7  = ID_src1 == (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:26" *) next_dest;
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$10 ) begin end
    (* full_case = 32'd1 *)
    (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:25" *)
    casez (\$5 )
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:25" */
      1'h1:
          (* full_case = 32'd1 *)
          (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:26" *)
          casez ({ \$9 , \$7  })
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:26" */
            2'b?1:
                (* full_case = 32'd1 *)
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:27" *)
                casez (\$11 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:27" */
                  1'h1:
                      stall = 1'h1;
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:29" */
                  default:
                      stall = 1'h0;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:32" */
            2'b1?:
                (* full_case = 32'd1 *)
                (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:33" *)
                casez (\$13 )
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:33" */
                  1'h1:
                      stall = 1'h1;
                  /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:35" */
                  default:
                      stall = 1'h0;
                endcase
            /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:38" */
            default:
                stall = 1'h0;
          endcase
      /* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:41" */
      default:
          stall = 1'h0;
    endcase
  end
  assign \$3  = web;
endmodule

(* \amaranth.hierarchy  = "top" *)
(* top =  1  *)
(* generator = "Amaranth" *)
module top(csb, web, wmask, alu_result, gpio_pins, output_pins, inst_mem_addr, inst_mem_rdata, data_mem_addr, data_mem_wdata, data_mem_rdata, neg_clk, neg_rst, clk, rst, read_flag);
  reg \$auto$verilog_backend.cc:2083:dump_module$11  = 0;
  (* src = "Wrapper1_class.py:66" *)
  wire \$1 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$101 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$103 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$105 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$107 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$109 ;
  (* src = "Wrapper1_class.py:71" *)
  wire \$11 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$111 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$113 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$115 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$117 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$119 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$121 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$123 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$125 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$127 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$129 ;
  (* src = "Wrapper1_class.py:73" *)
  wire \$13 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$131 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$133 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$135 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$137 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$139 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$141 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$143 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$145 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$147 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$149 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$15 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$151 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$153 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$155 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$157 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$159 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$161 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$163 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$165 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$167 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$169 ;
  (* src = "Wrapper1_class.py:71" *)
  wire \$17 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$171 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$173 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$175 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$177 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$179 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$181 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$183 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$185 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$187 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$189 ;
  (* src = "Wrapper1_class.py:73" *)
  wire \$19 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$191 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$193 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$195 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$197 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$199 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$201 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$203 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$205 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$207 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$209 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$21 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$211 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$213 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$215 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$217 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$219 ;
  (* src = "Wrapper1_class.py:71" *)
  wire \$23 ;
  (* src = "Wrapper1_class.py:73" *)
  wire \$25 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$27 ;
  (* src = "Wrapper1_class.py:71" *)
  wire \$29 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$3 ;
  (* src = "Wrapper1_class.py:73" *)
  wire \$31 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$33 ;
  (* src = "Wrapper1_class.py:71" *)
  wire \$35 ;
  (* src = "Wrapper1_class.py:73" *)
  wire \$37 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$39 ;
  (* src = "Wrapper1_class.py:71" *)
  wire \$41 ;
  (* src = "Wrapper1_class.py:73" *)
  wire \$43 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$45 ;
  (* src = "Wrapper1_class.py:71" *)
  wire \$47 ;
  (* src = "Wrapper1_class.py:73" *)
  wire \$49 ;
  (* src = "Wrapper1_class.py:71" *)
  wire \$5 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$51 ;
  (* src = "Wrapper1_class.py:71" *)
  wire \$53 ;
  (* src = "Wrapper1_class.py:73" *)
  wire \$55 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$57 ;
  (* src = "Wrapper1_class.py:71" *)
  wire \$59 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$61 ;
  (* src = "Wrapper1_class.py:71" *)
  wire \$63 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$65 ;
  (* src = "Wrapper1_class.py:71" *)
  wire \$67 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$69 ;
  (* src = "Wrapper1_class.py:73" *)
  wire \$7 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$71 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$73 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$75 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$77 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$79 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$81 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$83 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$85 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$87 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$89 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$9 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$91 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$93 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$95 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$97 ;
  (* src = "Wrapper1_class.py:66" *)
  wire \$99 ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:14" *)
  reg [31:0] ALU_Ra;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:15" *)
  reg [31:0] ALU_Rb;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:25" *)
  wire ALU_branching;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:36" *)
  wire ALU_csb;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:24" *)
  reg [31:0] ALU_immediate;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:18" *)
  reg [2:0] ALU_inst_type;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:19" *)
  reg [16:0] ALU_inst_type0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:20" *)
  reg [10:0] ALU_inst_type1;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:21" *)
  reg [10:0] ALU_inst_type2;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:22" *)
  reg [6:0] ALU_inst_type3;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:32" *)
  wire ALU_jump;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:38" *)
  wire ALU_load_wb;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:33" *)
  reg [5:0] ALU_pc;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:23" *)
  reg [4:0] ALU_reg_addr_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:31" *)
  wire [4:0] ALU_reg_addr_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:16" *)
  wire [31:0] ALU_result;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:34" *)
  reg [4:0] ALU_shamt;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:37" *)
  wire ALU_web;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:39" *)
  wire [3:0] ALU_wmask;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:18" *)
  wire [4:0] ID_des;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:29" *)
  wire ID_ifload;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:12" *)
  reg [31:0] ID_instruction;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:24" *)
  wire [2:0] ID_instruction_type;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:25" *)
  wire [16:0] ID_it0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:26" *)
  wire [10:0] ID_it1;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:27" *)
  wire [10:0] ID_it2;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:28" *)
  wire [6:0] ID_it3;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:19" *)
  wire [4:0] ID_s1;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:13" *)
  reg [31:0] ID_s1_data_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:21" *)
  wire [31:0] ID_s1data_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:20" *)
  wire [4:0] ID_s2;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:14" *)
  reg [31:0] ID_s2_data_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:22" *)
  wire [31:0] ID_s2data_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:30" *)
  wire [4:0] ID_shamt;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id.py:23" *)
  wire [31:0] ID_signextended_immediate;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:16" *)
  reg [31:0] IF_ID_pipeline_IF2_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:22" *)
  reg IF_ID_pipeline_branch;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:19" *)
  wire [31:0] IF_ID_pipeline_inst_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:23" *)
  reg IF_ID_pipeline_jump;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/IF_ID_pipeline.py:21" *)
  reg IF_ID_pipeline_stall;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:26" *)
  reg M1_M2_pipeline_csb_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:27" *)
  wire M1_M2_pipeline_csb_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:16" *)
  reg [4:0] M1_M2_pipeline_memory_reg_addr_out_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:17" *)
  wire [4:0] M1_M2_pipeline_reg_file_write_addr_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:14" *)
  reg M1_M2_pipeline_reg_file_write_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:15" *)
  wire M1_M2_pipeline_reg_file_write_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:21" *)
  reg [4:0] M1_M2_pipeline_s1_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:23" *)
  wire [4:0] M1_M2_pipeline_s1_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:22" *)
  reg [4:0] M1_M2_pipeline_s2_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:24" *)
  wire [4:0] M1_M2_pipeline_s2_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:28" *)
  reg M1_M2_pipeline_web_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M1_M2_pipeline.py:29" *)
  wire M1_M2_pipeline_web_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:26" *)
  reg M2_WB_pipeline_csb_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:27" *)
  wire M2_WB_pipeline_csb_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:18" *)
  reg [31:0] M2_WB_pipeline_memory_data_out_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:16" *)
  reg [4:0] M2_WB_pipeline_memory_reg_addr_out_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:17" *)
  wire [4:0] M2_WB_pipeline_reg_file_write_addr_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:19" *)
  wire [31:0] M2_WB_pipeline_reg_file_write_data_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:14" *)
  reg M2_WB_pipeline_reg_file_write_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:15" *)
  wire M2_WB_pipeline_reg_file_write_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:21" *)
  reg [4:0] M2_WB_pipeline_s1_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:22" *)
  reg [4:0] M2_WB_pipeline_s2_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:28" *)
  reg M2_WB_pipeline_web_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/M2_WB_pipeline.py:29" *)
  wire M2_WB_pipeline_web_out;
  (* src = "Wrapper1_class.py:36" *)
  output [31:0] alu_result;
  reg [31:0] alu_result;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  wire clk;
  (* src = "Wrapper1_class.py:31" *)
  output csb;
  reg csb;
  (* src = "Wrapper1_class.py:34" *)
  output [5:0] data_mem_addr;
  reg [5:0] data_mem_addr;
  (* src = "Wrapper1_class.py:35" *)
  input [31:0] data_mem_rdata;
  wire [31:0] data_mem_rdata;
  (* src = "Wrapper1_class.py:33" *)
  output [31:0] data_mem_wdata;
  reg [31:0] data_mem_wdata;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:19" *)
  reg forwarding_alu_csb0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:17" *)
  reg [4:0] forwarding_alu_des0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:23" *)
  wire [31:0] forwarding_alu_ra;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:24" *)
  wire [31:0] forwarding_alu_rb;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:14" *)
  reg [4:0] forwarding_alu_s1;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:12" *)
  reg [31:0] forwarding_alu_s1_data;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:15" *)
  reg [4:0] forwarding_alu_s2;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:13" *)
  reg [31:0] forwarding_alu_s2_data;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:18" *)
  reg [31:0] forwarding_alu_val0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/forward_alu.py:20" *)
  reg forwarding_alu_web0;
  (* src = "Wrapper1_class.py:37" *)
  output [31:0] gpio_pins;
  reg [31:0] gpio_pins;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:37" *)
  wire [4:0] id_mux_des;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:20" *)
  reg [4:0] id_mux_des_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:31" *)
  reg id_mux_ifload_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:43" *)
  wire [2:0] id_mux_instruction_type;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:26" *)
  reg [2:0] id_mux_instruction_type_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:44" *)
  wire [16:0] id_mux_it0;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:27" *)
  reg [16:0] id_mux_it0_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:45" *)
  wire [10:0] id_mux_it1;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:28" *)
  reg [10:0] id_mux_it1_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:46" *)
  wire [10:0] id_mux_it2;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:29" *)
  reg [10:0] id_mux_it2_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:47" *)
  wire [6:0] id_mux_it3;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:30" *)
  reg [6:0] id_mux_it3_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:38" *)
  wire [4:0] id_mux_s1;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:21" *)
  reg [4:0] id_mux_s1_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:40" *)
  wire [31:0] id_mux_s1data_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:23" *)
  reg [31:0] id_mux_s1data_out_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:39" *)
  wire [4:0] id_mux_s2;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:22" *)
  reg [4:0] id_mux_s2_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:41" *)
  wire [31:0] id_mux_s2data_out;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:24" *)
  reg [31:0] id_mux_s2data_out_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:49" *)
  wire [4:0] id_mux_shamt;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:32" *)
  reg [4:0] id_mux_shamt_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:42" *)
  wire [31:0] id_mux_signextended_immediate;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:25" *)
  reg [31:0] id_mux_signextended_immediate_id;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/id_mux.py:34" *)
  reg id_mux_stall;
  (* src = "Wrapper1_class.py:28" *)
  output [5:0] inst_mem_addr;
  reg [5:0] inst_mem_addr;
  (* src = "Wrapper1_class.py:29" *)
  input [31:0] inst_mem_rdata;
  wire [31:0] inst_mem_rdata;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/ir.py:527" *)
  input neg_clk;
  wire neg_clk;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/ir.py:527" *)
  input neg_rst;
  wire neg_rst;
  (* src = "Wrapper1_class.py:38" *)
  input [31:0] output_pins;
  wire [31:0] output_pins;
  (* src = "Wrapper1_class.py:26" *)
  reg [5:0] pc;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:14" *)
  reg pc_controller_branch;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:16" *)
  reg [31:0] pc_controller_immediate;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:15" *)
  reg pc_controller_jump;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:23" *)
  wire [5:0] pc_controller_pc;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:18" *)
  reg [5:0] pc_controller_pc_in;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:17" *)
  reg [31:0] pc_controller_ra;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:20" *)
  reg pc_controller_read_flag;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/pc_controller.py:13" *)
  reg pc_controller_stall;
  (* src = "Wrapper1_class.py:27" *)
  input read_flag;
  wire read_flag;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:36" *)
  wire [31:0] \reg_file_$signal ;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:20" *)
  reg reg_file_csb_alu;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:26" *)
  reg reg_file_csb_mem;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:29" *)
  reg [31:0] reg_file_gpio_input;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:13" *)
  reg [4:0] reg_file_load_Rs1_addr;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:14" *)
  reg [4:0] reg_file_load_Rs2_addr;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:15" *)
  reg [5:0] reg_file_pc;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:27" *)
  reg reg_file_web_mem;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:32" *)
  wire [31:0] reg_file_write_Rs1_data;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:33" *)
  wire [31:0] reg_file_write_Rs2_data;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:18" *)
  reg [4:0] reg_file_write_addr_alu;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:24" *)
  reg [4:0] reg_file_write_addr_mem;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:17" *)
  reg reg_file_write_alu;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:19" *)
  reg [31:0] reg_file_write_data_alu;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:25" *)
  reg [31:0] reg_file_write_data_mem;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/reg_file.py:23" *)
  reg reg_file_write_mem;
  (* src = "/home/ubuntu/.local/lib/python3.8/site-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  wire rst;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:40" *)
  reg [4:0] s1;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/alu.py:41" *)
  reg [4:0] s2;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:15" *)
  reg [4:0] stall_unit_ID_src1;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:16" *)
  reg [4:0] stall_unit_ID_src2;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:13" *)
  reg stall_unit_csb;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:17" *)
  reg [4:0] stall_unit_next_dest;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:19" *)
  wire stall_unit_stall;
  (* src = "/home/ubuntu/Generated_codes/1-stage_3-cycle-memory/all_stages/Stall_unit.py:14" *)
  reg stall_unit_web;
  (* src = "Wrapper1_class.py:32" *)
  output web;
  reg web;
  (* src = "Wrapper1_class.py:30" *)
  output [3:0] wmask;
  reg [3:0] wmask;
  assign \$219  = ~ (* src = "Wrapper1_class.py:66" *) read_flag;
  assign \$55  = pc < (* src = "Wrapper1_class.py:73" *) 3'h4;
  assign \$67  = pc < (* src = "Wrapper1_class.py:71" *) 3'h6;
  ALU ALU (
    .Ra(ALU_Ra),
    .Rb(ALU_Rb),
    .branching(ALU_branching),
    .csb(ALU_csb),
    .immediate(ALU_immediate),
    .inst_type(ALU_inst_type),
    .inst_type0(ALU_inst_type0),
    .inst_type1(ALU_inst_type1),
    .inst_type2(ALU_inst_type2),
    .inst_type3(ALU_inst_type3),
    .jump(ALU_jump),
    .load_wb(ALU_load_wb),
    .pc(ALU_pc),
    .reg_addr_in(ALU_reg_addr_in),
    .reg_addr_out(ALU_reg_addr_out),
    .result(ALU_result),
    .shamt(ALU_shamt),
    .web(ALU_web),
    .wmask(ALU_wmask)
  );
  ID ID (
    .des(ID_des),
    .ifload(ID_ifload),
    .instruction(ID_instruction),
    .instruction_type(ID_instruction_type),
    .it0(ID_it0),
    .it1(ID_it1),
    .it2(ID_it2),
    .it3(ID_it3),
    .s1(ID_s1),
    .s1_data_in(ID_s1_data_in),
    .s1data_out(ID_s1data_out),
    .s2(ID_s2),
    .s2_data_in(ID_s2_data_in),
    .s2data_out(ID_s2data_out),
    .shamt(ID_shamt),
    .signextended_immediate(ID_signextended_immediate)
  );
  IF_ID_pipeline IF_ID_pipeline (
    .IF2_out(IF_ID_pipeline_IF2_out),
    .branch(IF_ID_pipeline_branch),
    .clk(clk),
    .inst_out(IF_ID_pipeline_inst_out),
    .jump(IF_ID_pipeline_jump),
    .rst(rst),
    .stall(IF_ID_pipeline_stall)
  );
  M1_M2_pipeline M1_M2_pipeline (
    .clk(clk),
    .csb_in(M1_M2_pipeline_csb_in),
    .csb_out(M1_M2_pipeline_csb_out),
    .memory_reg_addr_out_out(M1_M2_pipeline_memory_reg_addr_out_out),
    .reg_file_write_addr_in(M1_M2_pipeline_reg_file_write_addr_in),
    .reg_file_write_in(M1_M2_pipeline_reg_file_write_in),
    .reg_file_write_out(M1_M2_pipeline_reg_file_write_out),
    .rst(rst),
    .s1_in(M1_M2_pipeline_s1_in),
    .s1_out(M1_M2_pipeline_s1_out),
    .s2_in(M1_M2_pipeline_s2_in),
    .s2_out(M1_M2_pipeline_s2_out),
    .web_in(M1_M2_pipeline_web_in),
    .web_out(M1_M2_pipeline_web_out)
  );
  M2_WB_pipeline M2_WB_pipeline (
    .clk(clk),
    .csb_in(M2_WB_pipeline_csb_in),
    .csb_out(M2_WB_pipeline_csb_out),
    .memory_data_out_out(M2_WB_pipeline_memory_data_out_out),
    .memory_reg_addr_out_out(M2_WB_pipeline_memory_reg_addr_out_out),
    .reg_file_write_addr_in(M2_WB_pipeline_reg_file_write_addr_in),
    .reg_file_write_data_in(M2_WB_pipeline_reg_file_write_data_in),
    .reg_file_write_in(M2_WB_pipeline_reg_file_write_in),
    .reg_file_write_out(M2_WB_pipeline_reg_file_write_out),
    .rst(rst),
    .s1_in(M2_WB_pipeline_s1_in),
    .s2_in(M2_WB_pipeline_s2_in),
    .web_in(M2_WB_pipeline_web_in),
    .web_out(M2_WB_pipeline_web_out)
  );
  forwarding_alu forwarding_alu (
    .csb0(forwarding_alu_csb0),
    .des0(forwarding_alu_des0),
    .ra(forwarding_alu_ra),
    .rb(forwarding_alu_rb),
    .s1(forwarding_alu_s1),
    .s1_data(forwarding_alu_s1_data),
    .s2(forwarding_alu_s2),
    .s2_data(forwarding_alu_s2_data),
    .val0(forwarding_alu_val0),
    .web0(forwarding_alu_web0)
  );
  id_mux id_mux (
    .des(id_mux_des),
    .des_id(id_mux_des_id),
    .ifload_id(id_mux_ifload_id),
    .instruction_type(id_mux_instruction_type),
    .instruction_type_id(id_mux_instruction_type_id),
    .it0(id_mux_it0),
    .it0_id(id_mux_it0_id),
    .it1(id_mux_it1),
    .it1_id(id_mux_it1_id),
    .it2(id_mux_it2),
    .it2_id(id_mux_it2_id),
    .it3(id_mux_it3),
    .it3_id(id_mux_it3_id),
    .s1(id_mux_s1),
    .s1_id(id_mux_s1_id),
    .s1data_out(id_mux_s1data_out),
    .s1data_out_id(id_mux_s1data_out_id),
    .s2(id_mux_s2),
    .s2_id(id_mux_s2_id),
    .s2data_out(id_mux_s2data_out),
    .s2data_out_id(id_mux_s2data_out_id),
    .shamt(id_mux_shamt),
    .shamt_id(id_mux_shamt_id),
    .signextended_immediate(id_mux_signextended_immediate),
    .signextended_immediate_id(id_mux_signextended_immediate_id),
    .stall(id_mux_stall)
  );
  pc_controller pc_controller (
    .branch(pc_controller_branch),
    .clk(clk),
    .immediate(pc_controller_immediate),
    .jump(pc_controller_jump),
    .pc(pc_controller_pc),
    .pc_in(pc_controller_pc_in),
    .ra(pc_controller_ra),
    .read_flag(pc_controller_read_flag),
    .rst(rst),
    .stall(pc_controller_stall)
  );
  reg_file reg_file (
    .\$signal (\reg_file_$signal ),
    .csb_alu(reg_file_csb_alu),
    .csb_mem(reg_file_csb_mem),
    .gpio_input(reg_file_gpio_input),
    .load_Rs1_addr(reg_file_load_Rs1_addr),
    .load_Rs2_addr(reg_file_load_Rs2_addr),
    .neg_clk(neg_clk),
    .neg_rst(neg_rst),
    .pc(reg_file_pc),
    .web_mem(reg_file_web_mem),
    .write_Rs1_data(reg_file_write_Rs1_data),
    .write_Rs2_data(reg_file_write_Rs2_data),
    .write_addr_alu(reg_file_write_addr_alu),
    .write_addr_mem(reg_file_write_addr_mem),
    .write_alu(reg_file_write_alu),
    .write_data_alu(reg_file_write_data_alu),
    .write_data_mem(reg_file_write_data_mem),
    .write_mem(reg_file_write_mem)
  );
  stall_unit stall_unit (
    .ID_src1(stall_unit_ID_src1),
    .ID_src2(stall_unit_ID_src2),
    .csb(stall_unit_csb),
    .next_dest(stall_unit_next_dest),
    .stall(stall_unit_stall),
    .web(stall_unit_web)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$1 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          pc = 6'h00;
      /* src = "Wrapper1_class.py:69" */
      default:
          pc = pc_controller_pc;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    reg_file_csb_alu = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$3 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          (* full_case = 32'd1 *)
          (* src = "Wrapper1_class.py:71" *)
          casez (\$5 )
            /* src = "Wrapper1_class.py:71" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "Wrapper1_class.py:73" *)
                casez (\$7 )
                  /* src = "Wrapper1_class.py:73" */
                  1'h1:
                      reg_file_csb_alu = 1'h0;
                  /* src = "Wrapper1_class.py:83" */
                  default:
                      reg_file_csb_alu = ALU_csb;
                endcase
            /* src = "Wrapper1_class.py:98" */
            default:
                reg_file_csb_alu = ALU_csb;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    reg_file_csb_mem = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$57 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          (* full_case = 32'd1 *)
          (* src = "Wrapper1_class.py:71" *)
          casez (\$59 )
            /* src = "Wrapper1_class.py:71" */
            1'h1:
                reg_file_csb_mem = 1'h0;
            /* src = "Wrapper1_class.py:98" */
            default:
                reg_file_csb_mem = M2_WB_pipeline_csb_out;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    reg_file_web_mem = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$61 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          (* full_case = 32'd1 *)
          (* src = "Wrapper1_class.py:71" *)
          casez (\$63 )
            /* src = "Wrapper1_class.py:71" */
            1'h1:
                reg_file_web_mem = 1'h0;
            /* src = "Wrapper1_class.py:98" */
            default:
                reg_file_web_mem = M2_WB_pipeline_web_out;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    reg_file_write_mem = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$65 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          (* full_case = 32'd1 *)
          (* src = "Wrapper1_class.py:71" *)
          casez (\$67 )
            /* src = "Wrapper1_class.py:71" */
            1'h1:
                reg_file_write_mem = 1'h0;
            /* src = "Wrapper1_class.py:98" */
            default:
                reg_file_write_mem = M2_WB_pipeline_reg_file_write_out;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    inst_mem_addr = 6'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$69 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          inst_mem_addr = pc;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    IF_ID_pipeline_IF2_out = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$71 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          IF_ID_pipeline_IF2_out = inst_mem_rdata;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    ID_instruction = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$73 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          ID_instruction = IF_ID_pipeline_inst_out;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    stall_unit_csb = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$75 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          stall_unit_csb = M1_M2_pipeline_csb_out;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    stall_unit_web = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$77 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          stall_unit_web = M1_M2_pipeline_web_out;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    stall_unit_ID_src1 = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$79 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          stall_unit_ID_src1 = ID_s1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    stall_unit_ID_src2 = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$81 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          stall_unit_ID_src2 = ID_s2;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    reg_file_write_alu = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$9 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          (* full_case = 32'd1 *)
          (* src = "Wrapper1_class.py:71" *)
          casez (\$11 )
            /* src = "Wrapper1_class.py:71" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "Wrapper1_class.py:73" *)
                casez (\$13 )
                  /* src = "Wrapper1_class.py:73" */
                  1'h1:
                      reg_file_write_alu = 1'h0;
                  /* src = "Wrapper1_class.py:83" */
                  default:
                      reg_file_write_alu = ALU_load_wb;
                endcase
            /* src = "Wrapper1_class.py:98" */
            default:
                reg_file_write_alu = ALU_load_wb;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    stall_unit_next_dest = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$83 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          stall_unit_next_dest = M1_M2_pipeline_reg_file_write_addr_in;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    pc_controller_pc_in = 6'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$85 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          pc_controller_pc_in = pc;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    pc_controller_ra = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$87 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          pc_controller_ra = ALU_Ra;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    pc_controller_immediate = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$89 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          pc_controller_immediate = ALU_immediate;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    pc_controller_read_flag = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$91 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          pc_controller_read_flag = read_flag;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    reg_file_pc = 6'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$93 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          reg_file_pc = pc;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    reg_file_load_Rs1_addr = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$95 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          reg_file_load_Rs1_addr = ID_s1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    reg_file_load_Rs2_addr = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$97 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          reg_file_load_Rs2_addr = ID_s2;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    ID_s1_data_in = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$99 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          ID_s1_data_in = reg_file_write_Rs1_data;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    ID_s2_data_in = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$101 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          ID_s2_data_in = reg_file_write_Rs2_data;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    IF_ID_pipeline_branch = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$15 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          (* full_case = 32'd1 *)
          (* src = "Wrapper1_class.py:71" *)
          casez (\$17 )
            /* src = "Wrapper1_class.py:71" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "Wrapper1_class.py:73" *)
                casez (\$19 )
                  /* src = "Wrapper1_class.py:73" */
                  1'h1:
                      IF_ID_pipeline_branch = 1'h0;
                  /* src = "Wrapper1_class.py:83" */
                  default:
                      IF_ID_pipeline_branch = ALU_branching;
                endcase
            /* src = "Wrapper1_class.py:98" */
            default:
                IF_ID_pipeline_branch = ALU_branching;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    id_mux_des_id = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$103 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          id_mux_des_id = ID_des;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    id_mux_s1_id = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$105 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          id_mux_s1_id = ID_s1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    id_mux_s2_id = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$107 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          id_mux_s2_id = ID_s2;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    id_mux_s1data_out_id = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$109 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          id_mux_s1data_out_id = ID_s1data_out;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    id_mux_s2data_out_id = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$111 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          id_mux_s2data_out_id = ID_s2data_out;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    id_mux_signextended_immediate_id = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$113 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          id_mux_signextended_immediate_id = ID_signextended_immediate;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    id_mux_instruction_type_id = 3'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$115 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          id_mux_instruction_type_id = ID_instruction_type;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    id_mux_it0_id = 17'h00000;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$117 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          id_mux_it0_id = ID_it0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    id_mux_it1_id = 11'h000;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$119 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          id_mux_it1_id = ID_it1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    id_mux_it2_id = 11'h000;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$121 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          id_mux_it2_id = ID_it2;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    IF_ID_pipeline_jump = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$21 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          (* full_case = 32'd1 *)
          (* src = "Wrapper1_class.py:71" *)
          casez (\$23 )
            /* src = "Wrapper1_class.py:71" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "Wrapper1_class.py:73" *)
                casez (\$25 )
                  /* src = "Wrapper1_class.py:73" */
                  1'h1:
                      IF_ID_pipeline_jump = 1'h0;
                  /* src = "Wrapper1_class.py:83" */
                  default:
                      IF_ID_pipeline_jump = ALU_jump;
                endcase
            /* src = "Wrapper1_class.py:98" */
            default:
                IF_ID_pipeline_jump = ALU_jump;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    id_mux_it3_id = 7'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$123 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          id_mux_it3_id = ID_it3;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    id_mux_ifload_id = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$125 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          id_mux_ifload_id = ID_ifload;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    id_mux_shamt_id = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$127 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          id_mux_shamt_id = ID_shamt;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    forwarding_alu_s1 = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$129 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          forwarding_alu_s1 = id_mux_s1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    forwarding_alu_s2 = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$131 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          forwarding_alu_s2 = id_mux_s2;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    forwarding_alu_s1_data = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$133 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          forwarding_alu_s1_data = id_mux_s1data_out;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    forwarding_alu_s2_data = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$135 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          forwarding_alu_s2_data = id_mux_s2data_out;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    forwarding_alu_des0 = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$137 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          forwarding_alu_des0 = reg_file_write_addr_mem;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    forwarding_alu_val0 = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$139 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          forwarding_alu_val0 = reg_file_write_data_mem;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    forwarding_alu_csb0 = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$141 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          forwarding_alu_csb0 = reg_file_csb_mem;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    IF_ID_pipeline_stall = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$27 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          (* full_case = 32'd1 *)
          (* src = "Wrapper1_class.py:71" *)
          casez (\$29 )
            /* src = "Wrapper1_class.py:71" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "Wrapper1_class.py:73" *)
                casez (\$31 )
                  /* src = "Wrapper1_class.py:73" */
                  1'h1:
                      IF_ID_pipeline_stall = 1'h0;
                  /* src = "Wrapper1_class.py:83" */
                  default:
                      IF_ID_pipeline_stall = stall_unit_stall;
                endcase
            /* src = "Wrapper1_class.py:98" */
            default:
                IF_ID_pipeline_stall = stall_unit_stall;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    forwarding_alu_web0 = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$143 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          forwarding_alu_web0 = reg_file_web_mem;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    ALU_pc = 6'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$145 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          ALU_pc = pc;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    ALU_Ra = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$147 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          ALU_Ra = forwarding_alu_ra;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    ALU_Rb = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$149 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          ALU_Rb = forwarding_alu_rb;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    ALU_reg_addr_in = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$151 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          ALU_reg_addr_in = id_mux_des;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    ALU_immediate = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$153 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          ALU_immediate = id_mux_signextended_immediate;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    ALU_inst_type = 3'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$155 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          ALU_inst_type = id_mux_instruction_type;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    ALU_inst_type0 = 17'h00000;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$157 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          ALU_inst_type0 = id_mux_it0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    ALU_inst_type1 = 11'h000;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$159 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          ALU_inst_type1 = id_mux_it1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    ALU_inst_type2 = 11'h000;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$161 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          ALU_inst_type2 = id_mux_it2;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    pc_controller_stall = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$33 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          (* full_case = 32'd1 *)
          (* src = "Wrapper1_class.py:71" *)
          casez (\$35 )
            /* src = "Wrapper1_class.py:71" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "Wrapper1_class.py:73" *)
                casez (\$37 )
                  /* src = "Wrapper1_class.py:73" */
                  1'h1:
                      pc_controller_stall = 1'h0;
                  /* src = "Wrapper1_class.py:83" */
                  default:
                      pc_controller_stall = stall_unit_stall;
                endcase
            /* src = "Wrapper1_class.py:98" */
            default:
                pc_controller_stall = stall_unit_stall;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    ALU_inst_type3 = 7'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$163 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          ALU_inst_type3 = id_mux_it3;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    s1 = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$165 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          s1 = id_mux_s1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    s2 = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$167 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          s2 = id_mux_s2;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    ALU_shamt = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$169 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          ALU_shamt = id_mux_shamt;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    csb = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$171 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          csb = ALU_csb;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    web = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$173 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          web = ALU_web;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    data_mem_addr = 6'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$175 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          data_mem_addr = ALU_result[5:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    wmask = 4'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$177 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          wmask = ALU_wmask;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    alu_result = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$179 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          alu_result = ALU_result;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    data_mem_wdata = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$181 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          data_mem_wdata = ALU_Rb;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    pc_controller_branch = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$39 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          (* full_case = 32'd1 *)
          (* src = "Wrapper1_class.py:71" *)
          casez (\$41 )
            /* src = "Wrapper1_class.py:71" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "Wrapper1_class.py:73" *)
                casez (\$43 )
                  /* src = "Wrapper1_class.py:73" */
                  1'h1:
                      pc_controller_branch = 1'h0;
                  /* src = "Wrapper1_class.py:83" */
                  default:
                      pc_controller_branch = ALU_branching;
                endcase
            /* src = "Wrapper1_class.py:98" */
            default:
                pc_controller_branch = ALU_branching;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    M1_M2_pipeline_reg_file_write_in = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$183 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          M1_M2_pipeline_reg_file_write_in = ALU_load_wb;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    M1_M2_pipeline_memory_reg_addr_out_out = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$185 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          M1_M2_pipeline_memory_reg_addr_out_out = ALU_reg_addr_out;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    M1_M2_pipeline_s1_in = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$187 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          M1_M2_pipeline_s1_in = s1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    M1_M2_pipeline_s2_in = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$189 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          M1_M2_pipeline_s2_in = s2;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    M1_M2_pipeline_csb_in = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$191 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          M1_M2_pipeline_csb_in = ALU_csb;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    M1_M2_pipeline_web_in = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$193 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          M1_M2_pipeline_web_in = ALU_web;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    M2_WB_pipeline_reg_file_write_in = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$195 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          M2_WB_pipeline_reg_file_write_in = M1_M2_pipeline_reg_file_write_out;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    M2_WB_pipeline_memory_reg_addr_out_out = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$197 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          M2_WB_pipeline_memory_reg_addr_out_out = M1_M2_pipeline_reg_file_write_addr_in;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    M2_WB_pipeline_memory_data_out_out = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$199 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          M2_WB_pipeline_memory_data_out_out = data_mem_rdata;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    M2_WB_pipeline_s1_in = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$201 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          M2_WB_pipeline_s1_in = M1_M2_pipeline_s1_out;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    pc_controller_jump = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$45 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          (* full_case = 32'd1 *)
          (* src = "Wrapper1_class.py:71" *)
          casez (\$47 )
            /* src = "Wrapper1_class.py:71" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "Wrapper1_class.py:73" *)
                casez (\$49 )
                  /* src = "Wrapper1_class.py:73" */
                  1'h1:
                      pc_controller_jump = 1'h0;
                  /* src = "Wrapper1_class.py:83" */
                  default:
                      pc_controller_jump = ALU_jump;
                endcase
            /* src = "Wrapper1_class.py:98" */
            default:
                pc_controller_jump = ALU_jump;
          endcase
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    M2_WB_pipeline_s2_in = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$203 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          M2_WB_pipeline_s2_in = M1_M2_pipeline_s2_out;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    M2_WB_pipeline_csb_in = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$205 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          M2_WB_pipeline_csb_in = M1_M2_pipeline_csb_out;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    M2_WB_pipeline_web_in = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$207 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          M2_WB_pipeline_web_in = M1_M2_pipeline_web_out;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    reg_file_write_addr_alu = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$209 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          reg_file_write_addr_alu = ALU_reg_addr_out;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    reg_file_write_data_alu = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$211 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          reg_file_write_data_alu = ALU_result;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    reg_file_write_addr_mem = 5'h00;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$213 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          reg_file_write_addr_mem = M2_WB_pipeline_reg_file_write_addr_in;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    reg_file_write_data_mem = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$215 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          reg_file_write_data_mem = M2_WB_pipeline_reg_file_write_data_in;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    gpio_pins = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$217 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          gpio_pins = \reg_file_$signal ;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    reg_file_gpio_input = 32'd0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$219 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          reg_file_gpio_input = output_pins;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$11 ) begin end
    id_mux_stall = 1'h0;
    (* full_case = 32'd1 *)
    (* src = "Wrapper1_class.py:66" *)
    casez (\$51 )
      /* src = "Wrapper1_class.py:66" */
      1'h1:
          /* empty */;
      /* src = "Wrapper1_class.py:69" */
      default:
          (* full_case = 32'd1 *)
          (* src = "Wrapper1_class.py:71" *)
          casez (\$53 )
            /* src = "Wrapper1_class.py:71" */
            1'h1:
                (* full_case = 32'd1 *)
                (* src = "Wrapper1_class.py:73" *)
                casez (\$55 )
                  /* src = "Wrapper1_class.py:73" */
                  1'h1:
                      id_mux_stall = 1'h0;
                  /* src = "Wrapper1_class.py:83" */
                  default:
                      id_mux_stall = stall_unit_stall;
                endcase
            /* src = "Wrapper1_class.py:98" */
            default:
                id_mux_stall = stall_unit_stall;
          endcase
    endcase
  end
  assign \$217  = \$219 ;
  assign \$215  = \$219 ;
  assign \$213  = \$219 ;
  assign \$211  = \$219 ;
  assign \$209  = \$219 ;
  assign \$207  = \$219 ;
  assign \$205  = \$219 ;
  assign \$203  = \$219 ;
  assign \$201  = \$219 ;
  assign \$199  = \$219 ;
  assign \$197  = \$219 ;
  assign \$195  = \$219 ;
  assign \$193  = \$219 ;
  assign \$191  = \$219 ;
  assign \$189  = \$219 ;
  assign \$187  = \$219 ;
  assign \$185  = \$219 ;
  assign \$183  = \$219 ;
  assign \$181  = \$219 ;
  assign \$179  = \$219 ;
  assign \$177  = \$219 ;
  assign \$175  = \$219 ;
  assign \$173  = \$219 ;
  assign \$171  = \$219 ;
  assign \$169  = \$219 ;
  assign \$167  = \$219 ;
  assign \$165  = \$219 ;
  assign \$163  = \$219 ;
  assign \$161  = \$219 ;
  assign \$159  = \$219 ;
  assign \$157  = \$219 ;
  assign \$155  = \$219 ;
  assign \$153  = \$219 ;
  assign \$151  = \$219 ;
  assign \$149  = \$219 ;
  assign \$147  = \$219 ;
  assign \$145  = \$219 ;
  assign \$143  = \$219 ;
  assign \$141  = \$219 ;
  assign \$139  = \$219 ;
  assign \$137  = \$219 ;
  assign \$135  = \$219 ;
  assign \$133  = \$219 ;
  assign \$131  = \$219 ;
  assign \$129  = \$219 ;
  assign \$127  = \$219 ;
  assign \$125  = \$219 ;
  assign \$123  = \$219 ;
  assign \$121  = \$219 ;
  assign \$119  = \$219 ;
  assign \$117  = \$219 ;
  assign \$115  = \$219 ;
  assign \$113  = \$219 ;
  assign \$111  = \$219 ;
  assign \$109  = \$219 ;
  assign \$107  = \$219 ;
  assign \$105  = \$219 ;
  assign \$103  = \$219 ;
  assign \$101  = \$219 ;
  assign \$99  = \$219 ;
  assign \$97  = \$219 ;
  assign \$95  = \$219 ;
  assign \$93  = \$219 ;
  assign \$91  = \$219 ;
  assign \$89  = \$219 ;
  assign \$87  = \$219 ;
  assign \$85  = \$219 ;
  assign \$83  = \$219 ;
  assign \$81  = \$219 ;
  assign \$79  = \$219 ;
  assign \$77  = \$219 ;
  assign \$75  = \$219 ;
  assign \$73  = \$219 ;
  assign \$71  = \$219 ;
  assign \$69  = \$219 ;
  assign \$65  = \$219 ;
  assign \$63  = \$67 ;
  assign \$61  = \$219 ;
  assign \$59  = \$67 ;
  assign \$57  = \$219 ;
  assign \$53  = \$67 ;
  assign \$51  = \$219 ;
  assign \$49  = \$55 ;
  assign \$47  = \$67 ;
  assign \$45  = \$219 ;
  assign \$43  = \$55 ;
  assign \$41  = \$67 ;
  assign \$39  = \$219 ;
  assign \$37  = \$55 ;
  assign \$35  = \$67 ;
  assign \$33  = \$219 ;
  assign \$31  = \$55 ;
  assign \$29  = \$67 ;
  assign \$27  = \$219 ;
  assign \$25  = \$55 ;
  assign \$23  = \$67 ;
  assign \$21  = \$219 ;
  assign \$19  = \$55 ;
  assign \$17  = \$67 ;
  assign \$15  = \$219 ;
  assign \$13  = \$55 ;
  assign \$11  = \$67 ;
  assign \$9  = \$219 ;
  assign \$7  = \$55 ;
  assign \$5  = \$67 ;
  assign \$3  = \$219 ;
  assign \$1  = \$219 ;
endmodule

module sky130_sram_2kbyte_1rw1r_32x512_8_inst(
`ifdef USE_POWER_PINS
    vccd1,
    vssd1,
`endif
// Port 0: RW
    clk0,csb0,web0,wmask0,addr0,din0,dout0,
// Port 1: R
    clk1,csb1,addr1,dout1
  );

  parameter NUM_WMASKS = 4 ;
  parameter DATA_WIDTH = 32 ;
  parameter ADDR_WIDTH = 6 ;
  parameter RAM_DEPTH = 1 << ADDR_WIDTH;
  // FIXME: This delay is arbitrary.
  parameter DELAY = 0 ;
  parameter VERBOSE = 0 ; //Set to 0 to only display warnings
  parameter T_HOLD = 0 ; //Delay to hold dout value after posedge. Value is arbitrary

`ifdef USE_POWER_PINS
    inout vccd1;
    inout vssd1;
`endif
  input  clk0; // clock
  input   csb0; // active low chip select
  input  web0; // active low write control
  input [NUM_WMASKS-1:0]   wmask0; // write mask
  input [ADDR_WIDTH-1:0]  addr0;
  input [DATA_WIDTH-1:0]  din0;
  output [DATA_WIDTH-1:0] dout0;
  input  clk1; // clock
  input   csb1; // active low chip select
  input [ADDR_WIDTH-1:0]  addr1;
  output [DATA_WIDTH-1:0] dout1;

  reg  csb0_reg;
  reg  web0_reg;
  reg [NUM_WMASKS-1:0]   wmask0_reg;
  reg [ADDR_WIDTH-1:0]  addr0_reg;
  reg [DATA_WIDTH-1:0]  din0_reg;
  reg [DATA_WIDTH-1:0]  dout0;

  // All inputs are registers
  always @(posedge clk0)
  begin
    csb0_reg = csb0;
    web0_reg = web0;
    wmask0_reg = wmask0;
    addr0_reg = addr0;
    din0_reg = din0;
    // #(T_HOLD) dout0 = 32'bx;
    // if ( !csb0_reg && web0_reg && VERBOSE ) 
    //   $display($time," Reading %m addr0=%b dout0=%b",addr0_reg,mem[addr0_reg]);
    // if ( !csb0_reg && !web0_reg && VERBOSE )
    //   $display($time," Writing %m addr0=%b din0=%b wmask0=%b",addr0_reg,din0_reg,wmask0_reg);
  end

  reg  csb1_reg;
  reg [ADDR_WIDTH-1:0]  addr1_reg;
  reg [DATA_WIDTH-1:0]  dout1;

  // All inputs are registers
  always @(posedge clk1)
  begin
    csb1_reg = csb1;
    addr1_reg = addr1;
    // if (!csb0 && !web0 && !csb1 && (addr0 == addr1))
    //      $display($time," WARNING: Writing and reading addr0=%b and addr1=%b simultaneously!",addr0,addr1);
    // #(T_HOLD) dout1 = 32'bx;
    // if ( !csb1_reg && VERBOSE ) 
    //   $display($time," Reading %m addr1=%b dout1=%b",addr1_reg,mem[addr1_reg]);
  end

reg [DATA_WIDTH-1:0]    mem [0:RAM_DEPTH-1];

initial
begin 
    mem[0] = 32'h00000000; // Zero instruction at mem[0]
    mem[1] = 32'hfd010113;
    mem[2] = 32'h02812623;
    mem[3] = 32'h03010413;
    mem[4] = 32'hfe042623;
    mem[5] = 32'h00100793;
    mem[6] = 32'hfef42423;
    mem[7] = 32'h00200793;
    mem[8] = 32'hfef42223;
    mem[9] = 32'h00200793;
    mem[10] = 32'hfef42023;
    mem[11] = 32'hfe042783;
    mem[12] = 32'h000f0513;
    mem[13] = 32'h00f567b3;
    mem[14] = 32'hfef42623;
    mem[15] = 32'hfec42783;
    mem[16] = 32'h00479793;
    mem[17] = 32'hfcf42e23;
    mem[18] = 32'h00ff6f33;
    mem[19] = 32'hfcf42e23;
    mem[20] = 32'hfddff06f;
    mem[21] = 32'hffffffff;
  end

  // Memory Write Block Port 0
  // Write Operation : When web0 = 0, csb0 = 0
  always @ (negedge clk0)
  begin : MEM_WRITE0
    if ( !csb0_reg && !web0_reg ) begin
        if (wmask0_reg[0])
                mem[addr0_reg][7:0] = din0_reg[7:0];
        if (wmask0_reg[1])
                mem[addr0_reg][15:8] = din0_reg[15:8];
        if (wmask0_reg[2])
                mem[addr0_reg][23:16] = din0_reg[23:16];
        if (wmask0_reg[3])
                mem[addr0_reg][31:24] = din0_reg[31:24];
    end
  end

  // Memory Read Block Port 0
  // Read Operation : When web0 = 1, csb0 = 0
  always @ (negedge clk0)
  begin : MEM_READ0
    if (!csb0_reg && web0_reg)
       dout0 = #(DELAY) mem[addr0_reg];
  end

  // Memory Read Block Port 1
  // Read Operation : When web1 = 1, csb1 = 0
  always @ (negedge clk1)
  begin : MEM_READ1
    if (!csb1_reg)
       dout1 = #(DELAY) mem[addr1_reg];
  end

endmodule


module sky130_sram_2kbyte_1rw1r_32x512_8_data(
`ifdef USE_POWER_PINS
    vccd1,
    vssd1,
`endif
// Port 0: RW
    clk0,csb0,web0,wmask0,addr0,din0,dout0,
// Port 1: R
    clk1,csb1,addr1,dout1
  );

  parameter NUM_WMASKS = 4 ;
  parameter DATA_WIDTH = 32 ;
  parameter ADDR_WIDTH = 6 ;
  parameter RAM_DEPTH = 1 << ADDR_WIDTH;
  // FIXME: This delay is arbitrary.
  parameter DELAY = 0 ;
  parameter VERBOSE = 0 ; //Set to 0 to only display warnings
  parameter T_HOLD = 0 ; //Delay to hold dout value after posedge. Value is arbitrary

`ifdef USE_POWER_PINS
    inout vccd1;
    inout vssd1;
`endif
  input  clk0; // clock
  input   csb0; // active low chip select
  input  web0; // active low write control
  input [NUM_WMASKS-1:0]   wmask0; // write mask
  input [ADDR_WIDTH-1:0]  addr0;
  input [DATA_WIDTH-1:0]  din0;
  output [DATA_WIDTH-1:0] dout0;
  input  clk1; // clock
  input   csb1; // active low chip select
  input [ADDR_WIDTH-1:0]  addr1;
  output [DATA_WIDTH-1:0] dout1;

  reg  csb0_reg;
  reg  web0_reg;
  reg [NUM_WMASKS-1:0]   wmask0_reg;
  reg [ADDR_WIDTH-1:0]  addr0_reg;
  reg [DATA_WIDTH-1:0]  din0_reg;
  reg [DATA_WIDTH-1:0]  dout0;

  // All inputs are registers
  always @(posedge clk0)
  begin
    csb0_reg = csb0;
    web0_reg = web0;
    wmask0_reg = wmask0;
    addr0_reg = addr0;
    din0_reg = din0;
    // #(T_HOLD) dout0 = 32'bx;
    // if ( !csb0_reg && web0_reg && VERBOSE ) 
    //   $display($time," Reading %m addr0=%b dout0=%b",addr0_reg,mem[addr0_reg]);
    // if ( !csb0_reg && !web0_reg && VERBOSE )
    //   $display($time," Writing %m addr0=%b din0=%b wmask0=%b",addr0_reg,din0_reg,wmask0_reg);
  end

  reg  csb1_reg;
  reg [ADDR_WIDTH-1:0]  addr1_reg;
  reg [DATA_WIDTH-1:0]  dout1;

  // All inputs are registers
  always @(posedge clk1)
  begin
    csb1_reg = csb1;
    addr1_reg = addr1;
    // if (!csb0 && !web0 && !csb1 && (addr0 == addr1))
    //      $display($time," WARNING: Writing and reading addr0=%b and addr1=%b simultaneously!",addr0,addr1);
    // #(T_HOLD) dout1 = 32'bx;
    // if ( !csb1_reg && VERBOSE ) 
    //   $display($time," Reading %m addr1=%b dout1=%b",addr1_reg,mem[addr1_reg]);
  end

reg [DATA_WIDTH-1:0]    mem [0:RAM_DEPTH-1];

  // Memory Write Block Port 0
  // Write Operation : When web0 = 0, csb0 = 0
  always @ (negedge clk0)
  begin : MEM_WRITE0
    if ( !csb0_reg && !web0_reg ) begin
        if (wmask0_reg[0])
                mem[addr0_reg][7:0] = din0_reg[7:0];
        if (wmask0_reg[1])
                mem[addr0_reg][15:8] = din0_reg[15:8];
        if (wmask0_reg[2])
                mem[addr0_reg][23:16] = din0_reg[23:16];
        if (wmask0_reg[3])
                mem[addr0_reg][31:24] = din0_reg[31:24];
    end
  end

  // Memory Read Block Port 0
  // Read Operation : When web0 = 1, csb0 = 0
  always @ (negedge clk0)
  begin : MEM_READ0
    if (!csb0_reg && web0_reg)
       dout0 = #(DELAY) mem[addr0_reg];
  end

  // Memory Read Block Port 1
  // Read Operation : When web1 = 1, csb1 = 0
  always @ (negedge clk1)
  begin : MEM_READ1
    if (!csb1_reg)
       dout1 = #(DELAY) mem[addr1_reg];
  end

endmodule

module uart_rx(
input  wire       clk          , // Top level system clock input.
input  wire       resetn       , // Asynchronous active low reset.
input  wire       uart_rxd     , // UART Recieve pin.
input  wire       uart_rx_en   , // Recieve enable
output wire       uart_rx_break, // Did we get a BREAK message?
output wire       uart_rx_valid, // Valid data recieved and available.
output reg  [8-1:0] uart_rx_data   // The recieved data.
);

// --------------------------------------------------------------------------- 
// External parameters.
// 

//
// Input bit rate of the UART line.
parameter   BIT_RATE        = 9600; // bits / sec
localparam  BIT_P           = 1_000_000_000 * 1/BIT_RATE; // nanoseconds

//
// Clock frequency in hertz.
parameter   CLK_HZ          =    50_000_000;
localparam  CLK_P           = 1_000_000_000 * 1/CLK_HZ; // nanoseconds

//
// Number of data bits recieved per UART packet.
parameter   PAYLOAD_BITS    = 8;

//
// Number of stop bits indicating the end of a packet.
parameter   STOP_BITS       = 1;

// -------------------------------------------------------------------------- 
// Internal parameters.
// 

//
// Number of clock cycles per uart bit.
localparam       CYCLES_PER_BIT     = BIT_P / CLK_P;

//
// Size of the registers which store sample counts and bit durations.
localparam       COUNT_REG_LEN      = 1+$clog2(CYCLES_PER_BIT);

// -------------------------------------------------------------------------- 
// Internal registers.
// 

//
// Internally latched value of the uart_rxd line. Helps break long timing
// paths from input pins into the logic.
reg rxd_reg;
reg rxd_reg_0;

//
// Storage for the recieved serial data.
reg [PAYLOAD_BITS-1:0] recieved_data;

//
// Counter for the number of cycles over a packet bit.
reg [COUNT_REG_LEN-1:0] cycle_counter;

//
// Counter for the number of recieved bits of the packet.
reg [3:0] bit_counter;

//
// Sample of the UART input line whenever we are in the middle of a bit frame.
reg bit_sample;

//
// Current and next states of the internal FSM.
reg [2:0] fsm_state;
reg [2:0] n_fsm_state;

localparam FSM_IDLE = 0;
localparam FSM_START= 1;
localparam FSM_RECV = 2;
localparam FSM_STOP = 3;

// --------------------------------------------------------------------------- 
// Output assignment
// 

assign uart_rx_break = uart_rx_valid && ~|recieved_data;
assign uart_rx_valid = fsm_state == FSM_STOP && n_fsm_state == FSM_IDLE;

always @(posedge clk) begin
    if(!resetn) begin
        uart_rx_data  <= {PAYLOAD_BITS{1'b0}};
    end else if (fsm_state == FSM_STOP) begin
        uart_rx_data  <= recieved_data;
    end
end

// --------------------------------------------------------------------------- 
// FSM next state selection.
// 

wire next_bit     = cycle_counter == CYCLES_PER_BIT ||
                        fsm_state       == FSM_STOP && 
                        cycle_counter   == CYCLES_PER_BIT/2;
wire payload_done = bit_counter   == PAYLOAD_BITS  ;

//
// Handle picking the next state.
always @(*) begin : p_n_fsm_state
    case(fsm_state)
        FSM_IDLE : n_fsm_state = rxd_reg      ? FSM_IDLE : FSM_START;
        FSM_START: n_fsm_state = next_bit     ? FSM_RECV : FSM_START;
        FSM_RECV : n_fsm_state = payload_done ? FSM_STOP : FSM_RECV ;
        FSM_STOP : n_fsm_state = next_bit     ? FSM_IDLE : FSM_STOP ;
        default  : n_fsm_state = FSM_IDLE;
    endcase
end

// --------------------------------------------------------------------------- 
// Internal register setting and re-setting.
// 

//
// Handle updates to the recieved data register.
integer i = 0;
always @(posedge clk) begin : p_recieved_data
    if(!resetn) begin
        recieved_data <= {PAYLOAD_BITS{1'b0}};
    end else if(fsm_state == FSM_IDLE             ) begin
        recieved_data <= {PAYLOAD_BITS{1'b0}};
    end else if(fsm_state == FSM_RECV && next_bit ) begin
        recieved_data[PAYLOAD_BITS-1] <= bit_sample;
        for ( i = PAYLOAD_BITS-2; i >= 0; i = i - 1) begin
            recieved_data[i] <= recieved_data[i+1];
        end
    end
end

//
// Increments the bit counter when recieving.
always @(posedge clk) begin : p_bit_counter
    if(!resetn) begin
        bit_counter <= 4'b0;
    end else if(fsm_state != FSM_RECV) begin
        bit_counter <= {COUNT_REG_LEN{1'b0}};
    end else if(fsm_state == FSM_RECV && next_bit) begin
        bit_counter <= bit_counter + 1'b1;
    end
end

//
// Sample the recieved bit when in the middle of a bit frame.
always @(posedge clk) begin : p_bit_sample
    if(!resetn) begin
        bit_sample <= 1'b0;
    end else if (cycle_counter == CYCLES_PER_BIT/2) begin
        bit_sample <= rxd_reg;
    end
end


//
// Increments the cycle counter when recieving.
always @(posedge clk) begin : p_cycle_counter
    if(!resetn) begin
        cycle_counter <= {COUNT_REG_LEN{1'b0}};
    end else if(next_bit) begin
        cycle_counter <= {COUNT_REG_LEN{1'b0}};
    end else if(fsm_state == FSM_START || 
                fsm_state == FSM_RECV  || 
                fsm_state == FSM_STOP   ) begin
        cycle_counter <= cycle_counter + 1'b1;
    end
end


//
// Progresses the next FSM state.
always @(posedge clk) begin : p_fsm_state
    if(!resetn) begin
        fsm_state <= FSM_IDLE;
    end else begin
        fsm_state <= n_fsm_state;
    end
end


//
// Responsible for updating the internal value of the rxd_reg.
always @(posedge clk) begin : p_rxd_reg
    if(!resetn) begin
        rxd_reg     <= 1'b1;
        rxd_reg_0   <= 1'b1;
    end else if(uart_rx_en) begin
        rxd_reg     <= rxd_reg_0;
        rxd_reg_0   <= uart_rxd;
    end
end


endmodule

module wrapper(clk_in,resetn,uart_rxd,uart_rx_en,uart_rx_break,uart_rx_valid,uart_rx_data, output_gpio_pins, input_gpio_pins, write_done, instructions);
input clk_in;
output reg write_done ; 
output reg [2:0] instructions ; 
input wire [3:0] input_gpio_pins;
output reg [3:0] output_gpio_pins;  
reg rst;
reg neg_clk; 
reg neg_rst; 
input  resetn       ; // Asynchronous active low reset.
input  uart_rxd     ; // UART Recieve pin.
input  uart_rx_en   ; // Recieve enable
output uart_rx_break; // Did we get a BREAK message?
output uart_rx_valid; // Valid data recieved and available.
output [7:0] uart_rx_data  ; // The recieved data.


wire web;
wire [5:0]inst_mem_addr;
wire [5:0] data_mem_addr;
wire [31:0]data_mem_wdata;
wire [3:0]mem_wstrb;
wire [31:0] inst_mem_rdata;
wire [31:0] inst_mem_rdata_dummy;
reg [31:0] inst_mem_rdata_reg;
wire [31:0] data_mem_rdata; 
wire [31:0] data_mem_rdata_dummy; 
reg [31:0] data_mem_rdata_reg;

wire [3:0] wmask; 
wire csb;

reg temp_web;
reg temp_csb;

reg [31:0]instruction;

parameter zero = 1'b0;
parameter one = 1'b1;

reg[5:0]write_inst_count;
reg writing_inst_done;
wire uart_rx_valid;
wire [31:0] alu_result ; 

wire [31:0] top_gpio_pins; 


reg [1:0]inst_byte_count;
reg inst_flag;// active low as write enable of sram is active low 

always@(*)
begin 
    neg_clk = ~clk; 
    rst = ~resetn ; 
    neg_rst = ~resetn; 
end 

reg [2:0] count = 3'b0; // 3-bit counter to divide by 5
reg clk = 0; 

  always @(posedge clk_in) begin
    // if (rst == 1) begin 
    //   clk <=0; 
    // end 
    // else begin 
    if (count == 3'b100) begin
      count <= 3'b0;            // Reset the counter
      clk <= ~clk; // Toggle the output clock
    end else begin
      count <= count + 1;       // Increment the counter
      clk <= clk; // Output clock remains unchanged
    end
  // end 
  end


reg [31:0] output_pins ; 

always@(posedge clk)
begin

    if(rst==1)
    begin 
        writing_inst_done=1;
        write_inst_count=0;
        instruction=0;
        inst_byte_count=0;
        inst_flag=1;
        
    end
    else 
    begin
        if(writing_inst_done==0)
        begin
            inst_flag=1;
            
            
            if(uart_rx_valid==1)
            begin
                //inst_flag=1;
                inst_byte_count = inst_byte_count+1;
                if(inst_byte_count==1)
                instruction[7:0]=uart_rx_data;
                else if(inst_byte_count==2)
                instruction[15:8]=uart_rx_data;
                else if(inst_byte_count==3)
                instruction[23:16]=uart_rx_data;
                
                // instruction = {o_Rx_Byte,instruction};
                
                else//byte count=4
                begin
                    instruction[31:24]=uart_rx_data;
                    inst_flag=0;
                    inst_byte_count=0;
                    write_inst_count=write_inst_count+1;
                    if(instruction==32'b11111111111111111111111111111111)
                    begin
                    inst_flag=1;
                    writing_inst_done=1;
                    //write_inst_count<=inst_mem_addr;
                    end
                end
            end
            temp_web=inst_flag;
            temp_csb=inst_flag;
        end
        else//(writing_inst_done==1)
        begin
            write_inst_count=inst_mem_addr;
            //starting to read 
            temp_web=1;//same as csb not proper 
            temp_csb=0;//csb from top module is not proper so hardwiring it to 0

                
        end
    end
end

// (* blackbox *)
top top_inst(.web(web), 
            .inst_mem_addr(inst_mem_addr), 
            .data_mem_addr(data_mem_addr),
            .data_mem_wdata(data_mem_wdata),
            .wmask(wmask), 
            .inst_mem_rdata(inst_mem_rdata_reg), 
            .data_mem_rdata(data_mem_rdata_reg),
            .neg_clk(neg_clk), 
            .neg_rst(neg_rst), 
            .clk(clk),
            .rst(rst), 
            .csb(csb),
            .read_flag(writing_inst_done), 
            .alu_result(alu_result), 
            .gpio_pins(top_gpio_pins),  
            .output_pins(output_pins));


// (* blackbox *)
 uart_rx uart_inst(.clk(clk)          , // Top level system clock input.
.resetn(resetn)       , // Asynchronous active low reset.
.uart_rxd(uart_rxd)     , // UART Recieve pin.
.uart_rx_en(uart_rx_en)   , // Recieve enable
.uart_rx_break(uart_rx_break), // Did we get a BREAK message?
.uart_rx_valid(uart_rx_valid), // Valid data recieved and available.
.uart_rx_data(uart_rx_data) );  // The recieved data.)



// (* blackbox *)
sky130_sram_2kbyte_1rw1r_32x512_8_inst inst_mem(
.clk0(clk),// clock
.csb0(temp_csb), // active low chip select
.web0(temp_web), // active low write control
.wmask0(4'b1111), // write mask
.addr0(write_inst_count),
.din0(instruction),
.dout0(inst_mem_rdata),

//not using 
.clk1(1'b0), // clock
.csb1(1'b1), // active low chip select
.addr1(write_inst_count),
.dout1(inst_mem_rdata_dummy)
);

//data mem
// (* blackbox *)
sky130_sram_2kbyte_1rw1r_32x512_8_data data_mem(
.clk0(clk), // clock
.csb0(csb), // active low chip select
.web0(web), // active low write control
.wmask0(wmask), // write mask
.addr0(data_mem_addr),
.din0(data_mem_wdata),
.dout0(data_mem_rdata),

//not using 
.clk1(1'b0), // clock
.csb1(1'b1), // active low chip select
.addr1(write_inst_count),
.dout1(data_mem_rdata_dummy)
);
//sram_1rw0r0w_32_1024_sky130A_icache sram_instr_inst(.clk0(clk),.csb0(temp_csb),.web0(temp_web),.addr0(write_inst_count[9:0]),.din0(instruction),.dout0(inst_mem_rdata));
//sram_1rw0r0w_32_1024_sky130A_dcache sram_data_inst(.clk0(clk),.csb0(csb),.web0(web),.addr0(data_mem_addr[9:0]),.din0(data_mem_wdata),.dout0(data_mem_rdata));

always@(*) 
begin 
    if(csb == 1)
    begin 
        data_mem_rdata_reg = alu_result ; 
    end 
    else 
    begin 
        data_mem_rdata_reg = data_mem_rdata; 
    end 
end 


always@(*)
begin 
    inst_mem_rdata_reg = inst_mem_rdata; 
    // data_mem_rdata_reg = data_mem_rdata;

end 

always @(posedge clk) 
begin
  output_pins = {24'b0, top_gpio_pins[7:4],  input_gpio_pins} ; 
  output_gpio_pins = top_gpio_pins[7:4]; 
  write_done = writing_inst_done ; 
  instructions = write_inst_count[2:0]; 

end 


endmodule